@page "/SqlSettings"
@using DeviceControl.Core.DAL
@using BlazorDeviceControl.Data
@using BlazorDeviceControl.Utils
@using Toolbelt.Blazor.HotKeys
@inject BlazorSettingsEntity _blazorSettings
@inject DataAccessConfig _dataAccessConfig
@inject DialogService _dialog
@inject NavigationManager _navigation
@inject NotificationService _notification
@inject TooltipService _tooltip
@inject HotKeys _hotKeys
@inject IJSRuntime _jsRuntime

@if (_blazorSettings.UserAccessLevel == true || _blazorSettings.UserAccessLevel == false)
{
    <h2>Настройки SQL</h2>

    <br style="margin-top: 20px" />
    <span>Статус подключения: </span>
    <RadzenCheckBox @bind-Value=@IsDisabled TValue="bool" Disabled="true" />
    <RadzenTextBox Style="width: 15%" Disabled=true Value=@_blazorSettings.DataAccess.IsDisabled.ToString() Change=@(args => Change(args, "State")) />
}
else
{
    <RadzenLabel Text=@LocalizationStrings.MenuAccessDeny></RadzenLabel>
}

@code {
    public DataAccessEntity DataAccess { get; set; }
    private bool _isDisabled;
    public bool IsDisabled { get => DataAccess.IsDisabled; set => _isDisabled = value; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync().ConfigureAwait(true);
        _blazorSettings.Setup(_dataAccessConfig, _notification, _dialog, _navigation, _tooltip, null, _jsRuntime);
    }

    private void Change(string value, string name)
    {
        StateHasChanged();
    }

    private void ShowTooltipSqlDefault(ElementReference elementReference, TooltipOptions options = null) => _tooltip.Open(elementReference, "Сбросить значения по-умолчанию", options);
    private void ShowTooltipSqlOpen(ElementReference elementReference, TooltipOptions options = null) => _tooltip.Open(elementReference, "Открыть подключение к  SQL-серверу", options);
    private void ShowTooltipSqlClose(ElementReference elementReference, TooltipOptions options = null) => _tooltip.Open(elementReference, "Закрыть подключение к  SQL-серверу", options);
    private void ShowTooltipGenerateException(ElementReference elementReference, TooltipOptions options = null) => _tooltip.Open(elementReference, "Сгенерировать тестовое исключение", options);
}
