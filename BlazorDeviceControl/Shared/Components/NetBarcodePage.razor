@inherits BlazorCore.Models.RazorBase
@page "/components/net_barcode"
@using Microsoft.AspNetCore.Components
@using NetBarcode
@using System.Drawing.Imaging

<PageTitle>NetBarcode</PageTitle>

<div class="container">
    <div class="row px-3">
        <RadzenCard Style="width: 100%; height: 80%; ">
            <!-- Value -->
            <RadzenLabel Style="width: 45%; text-align: left;" Text=@("Barcode value: ")/>
            <RadzenTextBox Style="width: 45%; text-align: left;" @bind-Value=@BarcodeValue/>
            <!-- Settings -->
            <RadzenLabel Style="width: 45%; " Text=@("Barcode type: ")/>
            <MudSelect Style="width: 45%; " 
                Variant=@Variant.Outlined Margin=@Margin.Dense
                @bind-Value=@BarcodeType>
                @foreach (BarcodeType item in BarcodeTypes)
                {
                    <MudSelectItem Value=@item >@item.ToString()</MudSelectItem>
                }
            </MudSelect>
            <RadzenLabel Style="width: 45%; " Text=@("Image format: ")/>
            <MudSelect Style="width: 45%; " 
                Variant=@Variant.Outlined Margin=@Margin.Dense
                @bind-Value=@ImageFormat>
                @foreach (ImageFormat item in ImageFormats)
                {
                    <MudSelectItem Value=@item >@item.ToString()</MudSelectItem>
                }
            </MudSelect>
            <!-- Redraw image -->
            <RadzenButton Text="Redraw barcode" Class="w-100" Click=@(_ => RedrawImage()) />
            <!-- Image -->
            @if (string.IsNullOrEmpty(BarcodeImage))
            {
                <RadzenLabel Style="width: 100%; text-align: left;" Text=@("BarcodeImage is null")/>
            }
            else
            {
                <img src=@BarcodeImage style="width: 100%; height: 25%;" alt=""/>
            }
            <!-- Exception -->
            @if (Exception is not null && !string.IsNullOrEmpty(Exception.Message))
            {
                <RadzenLabel Style="width: 100%; text-align: left;" Text=@($"{Exception.Message}")/>
                @if (Exception.InnerException is not null && !string.IsNullOrEmpty(Exception.InnerException.Message))
                {
                    <RadzenLabel Style="width: 100%; text-align: left;" Text=@($"{Exception.InnerException.Message}")/>
                }
            }
        </RadzenCard>
    </div>
</div>
