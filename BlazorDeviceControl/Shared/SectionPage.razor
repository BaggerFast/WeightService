@page "/sectionpage"
@using BlazorCore.Utils
@using BlazorCore
@using BlazorCore.DAL
@using BlazorCore.DAL.TableModels
@inherits BlazorCore.Models.BaseRazorEntity

@if (AppSettings.IdentityAccessLevel is true or false)
{
    @* Header *@
    <h2 style="font-size: @AppSettings.FontSizeHeader;">
        @GetHeader()
        <RadzenButton Click=@(args => SetParametersAsync(new ParameterView()))
                      ButtonStyle="ButtonStyle.Primary" Style="margin-top: 10px; width: 80px; margin-left: 25px"
                      class="oi oi-reload" Disabled=@AppSettings.DataAccess.IsDisabled MouseEnter="@(args => ShowTooltipGetData(args))" />
    </h2>

    <RadzenTabs>
        <Tabs>
            <RadzenTabsItem Text=@LocalizationStrings.DeviceControl.Table>
                @* RadzenGrid *@
                <div class="row col-sm-12 col-md-12 col-lg-12" style="margin-top: 5px;">
                    @if (Entities == null)
                    {
                        <RadzenLabel Text=@LocalizationStrings.Share.DataLoading Style="width: 20%" />
                        <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" Style="width: 77%; height: 15px" />
                    }
                    else
                    {
                        switch (Table)
                        {
                            case EnumTable.BarCodeTypes:
                                List<BarCodeTypesEntity> barCodeTypesEntities = new List<BarCodeTypesEntity>();
                                foreach (BaseIdEntity entity in Entities)
                                {
                                    barCodeTypesEntities.Add((BarCodeTypesEntity)entity);
                                }
                                <RadzenGrid Data=@barCodeTypesEntities TItem="BarCodeTypesEntity"
                                            RowSelect=@(args => RowSelectAsync(args)) RowDoubleClick=@(args => RowDoubleClickAsync(args))
                                            AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Advanced"
                                            AllowPaging="true" PageSize="25" AllowSorting="true" ColumnWidth="200px">
                                    <Columns>
                                        <RadzenGridColumn TItem="BarCodeTypesEntity" Property="Id" TextAlign="TextAlign.Center"
                                                          Title=@LocalizationStrings.DeviceControl.TableFieldId
                                                          Type="int" Width="50%" />
                                        <RadzenGridColumn TItem="BarCodeTypesEntity" Property="Name" Title=@LocalizationStrings.DeviceControl.TableFieldName
                                                          Type="string" Width="50%" />
                                    </Columns>
                                </RadzenGrid>
                                break;
                            case EnumTable.Contragents:
                                List<ContragentsEntity> contragentsEntities = new List<ContragentsEntity>();
                                foreach (BaseIdEntity entity in Entities)
                                {
                                    contragentsEntities.Add((ContragentsEntity)entity);
                                }
                                <RadzenGrid Data=@contragentsEntities TItem="ContragentsEntity"
                                            RowSelect=@(args => RowSelectAsync(args)) RowDoubleClick=@(args => RowDoubleClickAsync(args))
                                            AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Advanced"
                                            AllowPaging="true" PageSize="25" AllowSorting="true" ColumnWidth="200px">
                                    <Columns>
                                        <RadzenGridColumn TItem="ContragentsEntity" Property="Id" TextAlign="TextAlign.Center"
                                                          Title=@LocalizationStrings.DeviceControl.TableFieldId
                                                          Type="int" Width="7.5%" />
                                        <RadzenGridColumn TItem="ContragentsEntity" Property="Name" Title=@LocalizationStrings.DeviceControl.TableFieldName
                                                          Type="string" Width="85%" />
                                    </Columns>
                                </RadzenGrid>
                                break;
                            case EnumTable.Hosts:
                                List<HostsEntity> hostsEntities = new List<HostsEntity>();
                                foreach (BaseIdEntity entity in Entities)
                                {
                                    hostsEntities.Add((HostsEntity)entity);
                                }
                                <RadzenGrid Data=@hostsEntities TItem="HostsEntity"
                                            RowSelect=@(args => RowSelectAsync(args)) RowDoubleClick=@(args => RowDoubleClickAsync(args))
                                            AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Advanced"
                                            AllowPaging="true" PageSize="25" AllowSorting="true" ColumnWidth="200px">
                                    <Columns>
                                        <RadzenGridColumn TItem="HostsEntity" Property="Id" TextAlign="TextAlign.Center"
                                                          Title=@LocalizationStrings.DeviceControl.TableFieldId
                                                          Type="int" Width="7.5%" />
                                        <RadzenGridColumn TItem="HostsEntity" Property="Name" Title=@LocalizationStrings.DeviceControl.TableFieldName
                                                          Type="string" Width="20%" />
                                        <RadzenGridColumn TItem="HostsEntity" Property="Ip" Title=@LocalizationStrings.DeviceControl.TableFieldDeviceIp
                                                          Type="string" Width="20%" />
                                        <RadzenGridColumn TItem="HostsEntity" Property="IdRRef" Title=@LocalizationStrings.DeviceControl.TableFieldIdRref
                                                          Type="string" Width="20%" />
                                        <RadzenGridColumn TItem="HostsEntity" Property="Mac" Title=@LocalizationStrings.DeviceControl.TableFieldDeviceMac
                                                          Type="string" Width="20%" />
                                    </Columns>
                                </RadzenGrid>
                                break;
                            case EnumTable.Nomenclature:
                                List<NomenclatureEntity> nomenclatureEntities = new List<NomenclatureEntity>();
                                foreach (BaseIdEntity entity in Entities)
                                {
                                    nomenclatureEntities.Add((NomenclatureEntity)entity);
                                }
                                <RadzenGrid Data=@nomenclatureEntities TItem="NomenclatureEntity"
                                            RowSelect=@(args => RowSelectAsync(args)) RowDoubleClick=@(args => RowDoubleClickAsync(args))
                                            AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Advanced"
                                            AllowPaging="true" PageSize="25" AllowSorting="true" ColumnWidth="200px">
                                    <Columns>
                                        <RadzenGridColumn TItem="NomenclatureEntity" Property="Id" TextAlign="TextAlign.Center"
                                                          Title=@LocalizationStrings.DeviceControl.TableFieldId
                                                          Type="int" Width="7.5%" />
                                        <RadzenGridColumn TItem="NomenclatureEntity" Property="Marked" Title=@LocalizationStrings.DeviceControl.TableFieldMarked
                                                          Type="bool" Width="7.5%" />
                                        <RadzenGridColumn TItem="NomenclatureEntity" Property="Code" Title=@LocalizationStrings.DeviceControl.TableFieldCode
                                                          Type="string" Width="25%" />
                                        <RadzenGridColumn TItem="NomenclatureEntity" Property="Name" Title=@LocalizationStrings.DeviceControl.TableFieldName
                                                          Type="string" Width="30%" />
                                        <RadzenGridColumn TItem="NomenclatureEntity" Property="NomenclatureTypeGui" Title=@LocalizationStrings.DeviceControl.TableFieldNomenclatureType
                                                          Type="string" Width="30%" />
                                    </Columns>
                                </RadzenGrid>
                                break;
                            case EnumTable.ProductionFacility:
                                List<ProductionFacilityEntity> productionFacilityEntities = new List<ProductionFacilityEntity>();
                                foreach (BaseIdEntity entity in Entities)
                                {
                                    productionFacilityEntities.Add((ProductionFacilityEntity)entity);
                                }
                                // Sorting by [Name].
                                productionFacilityEntities = productionFacilityEntities.OrderBy(x => x.Name).ToList();
                                <RadzenGrid Data=@productionFacilityEntities TItem="ProductionFacilityEntity"
                                            RowSelect=@(args => RowSelectAsync(args)) RowDoubleClick=@(args => RowDoubleClickAsync(args))
                                            AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Advanced"
                                            AllowPaging="true" PageSize="25" AllowSorting="true" ColumnWidth="200px">
                                    <Columns>
                                        <RadzenGridColumn TItem="ProductionFacilityEntity" Property="Id" TextAlign="TextAlign.Center"
                                                          Title=@LocalizationStrings.DeviceControl.TableFieldId
                                                          Type="int" Width="7.5%" />
                                        <RadzenGridColumn TItem="ProductionFacilityEntity" Property="Name" Title=@LocalizationStrings.DeviceControl.TableFieldName
                                                          Type="string" Width="92.5%" />
                                    </Columns>
                                </RadzenGrid>
                                break;
                            case EnumTable.ProductSeries:
                                List<ProductSeriesEntity> productSeries = new List<ProductSeriesEntity>();
                                foreach (BaseIdEntity entity in Entities)
                                {
                                    productSeries.Add((ProductSeriesEntity)entity);
                                }
                                <RadzenGrid Data=@productSeries TItem="ProductSeriesEntity"
                                            RowSelect=@(args => RowSelectAsync(args)) RowDoubleClick=@(args => RowDoubleClickAsync(args))
                                            AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Advanced"
                                            AllowPaging="true" PageSize="25" AllowSorting="true" ColumnWidth="200px">
                                    <Columns>
                                        <RadzenGridColumn TItem="ProductSeriesEntity" Property="Id" TextAlign="TextAlign.Center"
                                                          Title=@LocalizationStrings.DeviceControl.TableFieldId
                                                          Type="int" Width="7.5%" />
                                        <RadzenGridColumn TItem="ProductSeriesEntity" Property="ScaleId" Title=@LocalizationStrings.DeviceControl.TableFieldScaleId
                                                          Type="string" Width="12.5%" />
                                        <RadzenGridColumn TItem="ProductSeriesEntity" Property="Uid" Title=@LocalizationStrings.DeviceControl.TableFieldUid
                                                          Type="Guid" Width="25%" />
                                        <RadzenGridColumn TItem="ProductSeriesEntity" Property="IsClose" Title=@LocalizationStrings.DeviceControl.TableFieldIsClose
                                                          Type="bool" Width="25%" />
                                        <RadzenGridColumn TItem="ProductSeriesEntity" Property="Sscc" Title=@LocalizationStrings.DeviceControl.TableFieldSscc
                                                          Type="string" Width="30%" />
                                    </Columns>
                                </RadzenGrid>
                                break;
                            case EnumTable.SsccStorage:
                                break;
                            case EnumTable.TemplateResources:
                                List<TemplateResourcesEntity> templateResourcesEntities = new List<TemplateResourcesEntity>();
                                foreach (BaseIdEntity entity in Entities)
                                {
                                    templateResourcesEntities.Add((TemplateResourcesEntity)entity);
                                }
                                // Sorting by [Type].
                                templateResourcesEntities = templateResourcesEntities.OrderBy(x => x.Type).ToList();
                                <RadzenGrid Data=@templateResourcesEntities TItem="TemplateResourcesEntity"
                                            RowSelect=@(args => RowSelectAsync(args)) RowDoubleClick=@(args => RowDoubleClickAsync(args))
                                            AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Advanced"
                                            AllowPaging="true" PageSize="25" AllowSorting="true" ColumnWidth="200px">
                                    <Columns>
                                        <RadzenGridColumn TItem="TemplateResourcesEntity" Property="Id" TextAlign="TextAlign.Center"
                                                          Title=@LocalizationStrings.DeviceControl.TableFieldId Width="7.5%" />
                                        <RadzenGridColumn TItem="TemplateResourcesEntity" Property="Type" TextAlign="TextAlign.Center"
                                                          Title=@LocalizationStrings.DeviceControl.TableFieldType Width="10%" />
                                        <RadzenGridColumn TItem="TemplateResourcesEntity" Property="Name"
                                                          Title=@LocalizationStrings.DeviceControl.TableFieldName Width="30%" />
                                        <RadzenGridColumn TItem="TemplateResourcesEntity" Property="Description"
                                                          Title=@LocalizationStrings.DeviceControl.TableFieldDescription Width="28%" />
                                        <RadzenGridColumn TItem="TemplateResourcesEntity" Property="ImageDataInfo"
                                                          Title=@LocalizationStrings.DeviceControl.TableFieldImageDataInfo Width="22.5%" />
                                    </Columns>
                                </RadzenGrid>
                                break;
                            case EnumTable.Templates:
                                if (TemplateCategories == null)
                                {
                                    <RadzenTextBox Style="width: 70%;" Disabled="true" TValue="string" Value="" />
                                    <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" Style="width: 77%; height: 15px" />
                                }
                                else
                                {
                                    <RadzenLabel Style="" TValue="string" Text=@LocalizationStrings.DeviceControl.TableFieldCategoryName />
                                    <RadzenDropDown Style="margin-left: 10px; margin-top: -10px; width: 200px;"
                                                    TValue="string" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                    AllowFiltering="true" AllowClear="true" AllowFilteringByAllStringColumns="true"
                                                    Data=@TemplateCategories PageSize="5" TextProperty="Name" ValueProperty="Value"
                                                    Value=@TemplateCategory Change=@(args => OnChange(args, "TemlateCategories")) />
                                }
                                <br />
                                List<TemplatesEntity> templatesEntities = new List<TemplatesEntity>();
                                foreach (BaseIdEntity entity in Entities)
                                {
                                    templatesEntities.Add((TemplatesEntity)entity);
                                }
                                // Sorting by [CategoryId].
                                templatesEntities = templatesEntities.OrderBy(x => x.CategoryId).ToList();
                                <RadzenGrid Data=@templatesEntities TItem="TemplatesEntity"
                                            RowSelect=@(args => RowSelectAsync(args)) RowDoubleClick=@(args => RowDoubleClickAsync(args))
                                            AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Advanced"
                                            AllowPaging="true" PageSize="25" AllowSorting="true" ColumnWidth="200px">
                                    <Columns>
                                        <RadzenGridColumn TItem="TemplatesEntity" Property="Id" TextAlign="TextAlign.Center"
                                                          Title=@LocalizationStrings.DeviceControl.TableFieldId Width="7.5%" />
                                        <RadzenGridColumn TItem="TemplatesEntity" Property="CategoryId" TextAlign="TextAlign.Center"
                                                          Title=@LocalizationStrings.DeviceControl.TableFieldCategoryName Width="10%" />
                                        <RadzenGridColumn TItem="TemplatesEntity" Property="Title" Title=@LocalizationStrings.DeviceControl.TableFieldTitle Width="82.5%" />
                                    </Columns>
                                </RadzenGrid>
                                break;
                            case EnumTable.WorkShop:
                                List<WorkshopEntity> workshopEntities = new List<WorkshopEntity>();
                                foreach (BaseIdEntity entity in Entities)
                                {
                                    workshopEntities.Add((WorkshopEntity)entity);
                                }
                                // Sorting by [ProductionFacility].
                                workshopEntities = workshopEntities.OrderBy(x => x.ProductionFacility.Name).ToList();
                                <RadzenGrid Data=@workshopEntities TItem="WorkshopEntity"
                                            RowSelect=@(args => RowSelectAsync(args)) RowDoubleClick=@(args => RowDoubleClickAsync(args))
                                            AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Advanced"
                                            AllowPaging="true" PageSize="25" AllowSorting="true" ColumnWidth="200px">
                                    <Columns>
                                        <RadzenGridColumn TItem="WorkshopEntity" Property="Id" TextAlign="TextAlign.Center"
                                                          Title=@LocalizationStrings.DeviceControl.TableFieldId
                                                          Type="int" Width="7.5%" />
                                        <RadzenGridColumn TItem="WorkshopEntity" Property="Name" Title=@LocalizationStrings.DeviceControl.TableFieldWorkShopName
                                                          Type="string" Width="52.5%" />
                                        <RadzenGridColumn TItem="WorkshopEntity" Property="ProductionFacility.Name"
                                                          Title=@LocalizationStrings.DeviceControl.TableFieldProductionFacilityName
                                                          Type="int" Width="45%" />
                                    </Columns>
                                </RadzenGrid>
                                break;
                            case EnumTable.PrinterType:
                                List<ZebraPrinterTypeEntity> zebraPrinterTypeEntities = new List<ZebraPrinterTypeEntity>();
                                foreach (BaseIdEntity entity in Entities)
                                {
                                    zebraPrinterTypeEntities.Add((ZebraPrinterTypeEntity)entity);
                                }
                                // Sorting by [Name].
                                zebraPrinterTypeEntities = zebraPrinterTypeEntities.OrderBy(x => x.Name).ToList();
                                <RadzenGrid Data=@zebraPrinterTypeEntities TItem="ZebraPrinterTypeEntity"
                                            RowSelect=@(args => RowSelectAsync(args)) RowDoubleClick=@(args => RowDoubleClickAsync(args))
                                            AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Advanced"
                                            AllowPaging="true" PageSize="25" AllowSorting="true" ColumnWidth="200px">
                                    <Columns>
                                        <RadzenGridColumn TItem="ZebraPrinterTypeEntity" Property="Id" TextAlign="TextAlign.Center"
                                                          Title=@LocalizationStrings.DeviceControl.TableFieldId
                                                          Type="int" Width="7.5%" />
                                        <RadzenGridColumn TItem="ZebraPrinterTypeEntity" Property="Name" Title=@LocalizationStrings.DeviceControl.TableFieldZebraPrinter
                                                          Type="string" Width="60%" />
                                    </Columns>
                                </RadzenGrid>
                                break;
                        }
                    }
                </div>
                @* Actions *@
                <div class="row col-sm-12 col-md-12 col-lg-12" style="margin-top: 5px; height: 50px;">
                    @if (AppSettings.IdentityAccessLevel == true)
                    {
                        <RadzenButton Click=@(args => ActionAddAsync(Table, Entity, null))
                                      ButtonStyle="ButtonStyle.Secondary"
                                      Style="margin-left: 30px; width: 200px; height: 30px; font-size: 12px;"
                                      Text=@LocalizationStrings.DeviceControl.TableActionAdd Disabled=@AppSettings.DataAccess.IsDisabled />
                        <RadzenButton Click=@(args => ActionEditAsync(Table, Entity, null))
                                      ButtonStyle="ButtonStyle.Secondary"
                                      Style="margin-left: 30px; width: 200px; height: 30px; font-size: 12px; "
                                      Text=@LocalizationStrings.DeviceControl.TableActionEdit Disabled=@AppSettings.DataAccess.IsDisabled />
                        <RadzenButton Click=@(args => ActionMarkedAsync(Table, Entity, null))
                                      ButtonStyle="ButtonStyle.Secondary"
                                      Style="margin-left: 30px; width: 200px; height: 30px; font-size: 12px; "
                                      Text=@LocalizationStrings.DeviceControl.TableActionDelete Disabled=@AppSettings.DataAccess.IsDisabled />
                        @if (AppSettings.IsDebug)
                        {
                            <RadzenButton Click=@(args => ActionCopyAsync(Table, Entity, null))
                                          ButtonStyle="ButtonStyle.Secondary"
                                          Style="margin-left: 30px; width: 200px; height: 30px; font-size: 12px; "
                                          Text=@LocalizationStrings.DeviceControl.TableActionCopy Disabled=@AppSettings.DataAccess.IsDisabled />
                            <RadzenButton Click=@(args => ActionDeleteAsync(Table, Entity, null))
                                          ButtonStyle="ButtonStyle.Secondary"
                                          Style="margin-left: 30px; width: 200px; height: 30px; font-size: 12px; "
                                          Text=@LocalizationStrings.DeviceControl.TableActionDeleteForever Disabled=@AppSettings.DataAccess.IsDisabled />
                        }
                    }
                    else
                    {
                        <span>@LocalizationStrings.DeviceControl.TableActionsIsDeny</span>
                    }
                </div>
            </RadzenTabsItem>
            <RadzenTabsItem Text=@LocalizationStrings.Share.Chart>
                @switch (Table)
                {
                    case EnumTable.Contragents:
                        @if (ContragentsChartCreated == null || ContragentsChartCreated.Length == 0 ||
                    ContragentsChartModified == null || ContragentsChartModified.Length == 0)
                        {
                            <RadzenLabel Text=@LocalizationStrings.Share.DataLoading Style="width: 20%" />
                            <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" Style="width: 77%; height: 15px" />
                        }
                        else
                        {
                            <RadzenLabel Style="width: 80px" Text=@LocalizationStrings.Share.ChartSmooth>
                            </RadzenLabel>
                            <RadzenCheckBox Style="height: 30px" @bind-Value=@AppSettings.IsChartSmooth></RadzenCheckBox>
                            <br />
                            <RadzenChart>
                                <RadzenLineSeries Smooth=@AppSettings.IsChartSmooth Data=@ContragentsChartCreated CategoryProperty="Date"
                                                  Title=@LocalizationStrings.Share.FieldCreated
                                                  LineType="LineType.Dashed" ValueProperty="Count">
                                    <RadzenMarkers MarkerType="MarkerType.Square" />
                                </RadzenLineSeries>
                                <RadzenLineSeries Smooth=@AppSettings.IsChartSmooth Data=@ContragentsChartModified CategoryProperty="Date"
                                                  Title=@LocalizationStrings.Share.FieldModified
                                                  LineType="LineType.Dashed" ValueProperty="Count">
                                    <RadzenMarkers MarkerType="MarkerType.Square" />
                                </RadzenLineSeries>
                                <RadzenCategoryAxis Padding="20" FormatString="{0:MMM}{0:dd}" />
                                <RadzenValueAxis>
                                    <RadzenGridLines Visible="true" />
                                    <RadzenAxisTitle Text=@LocalizationStrings.Share.FieldCount />
                                </RadzenValueAxis>
                            </RadzenChart>
                        }
                        break;
                    case EnumTable.Nomenclature:
                        @if (NomenclaturesChartCreated == null || NomenclaturesChartCreated.Length == 0 ||
                    NomenclaturesChartModified == null || NomenclaturesChartModified.Length == 0)
                        {
                            <RadzenLabel Text=@LocalizationStrings.Share.DataLoading Style="width: 20%" />
                            <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" Style="width: 77%; height: 15px" />
                        }
                        else
                        {
                            <RadzenLabel Style="width: 80px" Text=@LocalizationStrings.Share.ChartSmooth>
                            </RadzenLabel>
                            <RadzenCheckBox Style="height: 30px" @bind-Value=@AppSettings.IsChartSmooth></RadzenCheckBox>
                            <br />
                            <RadzenChart>
                                <RadzenLineSeries Smooth=@AppSettings.IsChartSmooth Data=@NomenclaturesChartCreated CategoryProperty="Date"
                                                  Title=@LocalizationStrings.Share.FieldCreated
                                                  LineType="LineType.Dashed" ValueProperty="Count">
                                    <RadzenMarkers MarkerType="MarkerType.Square" />
                                </RadzenLineSeries>
                                <RadzenLineSeries Smooth=@AppSettings.IsChartSmooth Data=@NomenclaturesChartModified CategoryProperty="Date"
                                                  Title=@LocalizationStrings.Share.FieldModified
                                                  LineType="LineType.Dashed" ValueProperty="Count">
                                    <RadzenMarkers MarkerType="MarkerType.Square" />
                                </RadzenLineSeries>
                                <RadzenCategoryAxis Padding="20" FormatString="{0:MMM}{0:dd}" />
                                <RadzenValueAxis>
                                    <RadzenGridLines Visible="true" />
                                    <RadzenAxisTitle Text=@LocalizationStrings.Share.FieldCount />
                                </RadzenValueAxis>
                            </RadzenChart>
                        }
                        break;
                    case EnumTable.ProductionFacility:
                        break;
                    case EnumTable.TemplateResources:
                        break;
                    case EnumTable.Templates:
                        break;
                    case EnumTable.WorkShop:
                        break;
                    case EnumTable.PrinterType:
                        break;
                }
            </RadzenTabsItem>
        </Tabs>
    </RadzenTabs>
}
else
{
    <RadzenLabel Text=@LocalizationStrings.Share.MenuAccessDeny></RadzenLabel>
}
