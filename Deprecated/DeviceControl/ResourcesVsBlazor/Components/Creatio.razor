@page "/creatio"
@inject NavigationManager NavigationManager
@using ResourcesVS.Utils
@using ResourcesVS.Data

<h2>
    <RadzenLabel Text="@LocalizationStrings.CreatioTitle" />
</h2>

<body>
    <RadzenLabel Text="@LocalizationStrings.CreatioOfficialTitle" />
    <br />
    <RadzenLink Path="@LocalizationStrings.CreatioAcademyPath" Text="@LocalizationStrings.CreatioAcademyText" />
    <RadzenLink Path="@LocalizationStrings.CreatioMarketplacePath" Text="@LocalizationStrings.CreatioMarketplaceText"
                Style="margin-left: 20px" />
    <RadzenLink Path="@LocalizationStrings.CreatioCommunityPath" Text="@LocalizationStrings.CreatioCommunityText"
                Style="margin-left: 20px" />
    <br />
    <br />
    <RadzenLink Path="@LocalizationStrings.CreatioWebinarsPath" Text="@LocalizationStrings.CreatioWebinarsText" />
    <RadzenTextBox bind-Value="@LocalizationStrings.CreatioWebinarsPath" ReadOnly="true" />
    <br />
    <br />
    <RadzenLabel Text="@LocalizationStrings.CreatioTableTitle" Style="align-self: center" />
    @if (LocalSites == null)
    {
        <p><em>@LocalizationStrings.DataLoading</em></p>
    }
    else
    {
        <RadzenGrid Data=@LocalSites TItem="WebSiteEntity" Value=@WebSite
                    RowSelect=@(args => RowSelectAsync(args)) RowDoubleClick=@(args => RowDoubleClickAsync(args))
                    AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Advanced"
                    AllowPaging="true" PageSize="20" AllowSorting="true" ColumnWidth="200px">
            <Columns>
                <RadzenGridColumn TItem="WebSiteEntity" Property="Name" Title="@LocalizationStrings.CreatioTableFieldName" Type="string" />
                <RadzenGridColumn TItem="WebSiteEntity" Property="Link" Title="@LocalizationStrings.CreatioTableFieldLink" Type="string" />
                <RadzenGridColumn TItem="WebSiteEntity" Property="Dev" Title="@LocalizationStrings.CreatioTableFieldDev" Type="string" />
            </Columns>
        </RadzenGrid>
    }
    <br />
    <RadzenLink Path="@LocalizationStrings.CreatioCreStudyPath" Text="@LocalizationStrings.CreatioCreStudyText" />
    <RadzenLink Path="@LocalizationStrings.CreatioCreStudyDevPath" Text="@LocalizationStrings.CreatioCreStudyDevText"
                Style="margin-left: 20px" />
    <br />
    <RadzenLink Path="@LocalizationStrings.CreatioCreUpgradePath" Text="@LocalizationStrings.CreatioCreUpgradeText" />
    <RadzenLink Path="@LocalizationStrings.CreatioCreUpgradeDevPath" Text="@LocalizationStrings.CreatioCreUpgradeDevText"
                Style="margin-left: 0" />
    <br />
    <br />
    <RadzenLabel Text="@LocalizationStrings.CreatioRemoteTitle" />
    <br />
    <RadzenLink Path="@LocalizationStrings.CreatioTerrasoftPrePath" Text="@LocalizationStrings.CreatioTerrasoftPreText" />
    <RadzenLink Path="@LocalizationStrings.CreatioTerrasoftPreDevPath" Text="@LocalizationStrings.CreatioTerrasoftPreDevText"
                Style="margin-left: 9px" />
    <br />
    <RadzenLink Path="@LocalizationStrings.CreatioTerrasoftPre2Path" Text="@LocalizationStrings.CreatioTerrasoftPre2Text" />
    <RadzenLink Path="@LocalizationStrings.CreatioTerrasoftPre2DevPath" Text="@LocalizationStrings.CreatioTerrasoftPre2DevText"
                Style="margin-left: 0" />
    <br />
    <RadzenLink Path="@LocalizationStrings.CreatioTerrasoftPath" Text="@LocalizationStrings.CreatioTerrasoftText" />
    <RadzenLink Path="@LocalizationStrings.CreatioTerrasoftDevPath" Text="@LocalizationStrings.CreatioTerrasoftDevText"
                Style="margin-left: 40px" />
</body>

@code {
    public List<WebSiteEntity> LocalSites { get; set; }
    public WebSiteEntity WebSite { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(TimeSpan.FromMilliseconds(1)).ConfigureAwait(false);
        await base.OnInitializedAsync().ConfigureAwait(false);
        await FillDataAsync().ConfigureAwait(false);
    }

    private async Task FillDataAsync()
    {
        await Task.Delay(TimeSpan.FromMilliseconds(1)).ConfigureAwait(false);
        var sites = new List<WebSiteEntity>
{
            new WebSiteEntity(LocalizationStrings.CreatioCreDevDmName, LocalizationStrings.CreatioCreDevDmLink, LocalizationStrings.CreatioCreDevDmDev),
            new WebSiteEntity(LocalizationStrings.CreatioCreDevIaName, LocalizationStrings.CreatioCreDevIaLink, LocalizationStrings.CreatioCreDevIaDev),
            new WebSiteEntity(LocalizationStrings.CreatioCreTestName, LocalizationStrings.CreatioCreTestLink, LocalizationStrings.CreatioCreTestDev),
        };
        LocalSites = sites;
    }

    private async Task RowSelectAsync(WebSiteEntity site)
    {
        await Task.Delay(TimeSpan.FromMilliseconds(1)).ConfigureAwait(false);
        WebSite = site;
    }

    private async Task RowDoubleClickAsync(object args)
    {
        await Task.Delay(TimeSpan.FromMilliseconds(1)).ConfigureAwait(false);

        NavigationManager.NavigateTo(WebSite.Link, true);
    }
}
