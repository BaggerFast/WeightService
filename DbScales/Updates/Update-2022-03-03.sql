------------------------------------------------------------------------------------------------------------------------
-- Update-2022-03-03
------------------------------------------------------------------------------------------------------------------------
DECLARE @IS_COMMMIT BIT = 1  -- коммит транзакции
DECLARE @IS_RECREATE BIT = 1  -- пересоздать таблицы
DECLARE @IS_DROP_DEPRECATED BIT = 0  -- удалить устаревшие таблицы
DECLARE @IS_SELECT BIT = 1  -- выбрать данные
DECLARE @INFO NVARCHAR(1024) -- инфо
SET NOCOUNT ON
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
------------------------------------------------------------------------------------------------------------------------
IF (@IS_RECREATE = 1) BEGIN
	BEGIN TRAN
	-- DROP
	DROP INDEX IF EXISTS [BARCODES_V2_IDX_BARCODE_TYPE_UID] ON [db_scales].[BARCODES_V2]
	DROP INDEX IF EXISTS [BARCODES_V2_IDX_CONTRAGENT_UID] ON [db_scales].[BARCODES_V2]
	DROP INDEX IF EXISTS [BARCODES_V2_IDX_NOMENCLATURE_ID] ON [db_scales].[BARCODES_V2]
	DROP INDEX IF EXISTS [BARCODES_V2_IDX_NOMENCLATURE_UNIT_ID] ON [db_scales].[BARCODES_V2]
	DROP TABLE IF EXISTS [db_scales].[BARCODES_V2]
	DROP TABLE IF EXISTS [db_scales].[BARCODE_TYPES_V2]
	DROP INDEX IF EXISTS [CONTRAGENTS_V2_IDX_DWH_ID] ON [db_scales].[CONTRAGENTS_V2]
	DROP TABLE IF EXISTS [db_scales].[CONTRAGENTS_V2]
	-- DROP DEPRECATED
	IF (@IS_DROP_DEPRECATED = 1) BEGIN
		DROP TABLE IF EXISTS [db_scales].[BarCodes]
		DROP TABLE IF EXISTS [db_scales].[BarCodeTypes]
		DROP TABLE IF EXISTS [db_scales].[Contragents]
	END
	-- RECREATE BARCODES_V2
	SET @INFO = '[BARCODES_V2]'
	PRINT N'[+] RECREATE' + @INFO + ' ...'
	CREATE TABLE [db_scales].[BARCODES_V2] (
		[UID] [UNIQUEIDENTIFIER] NOT NULL DEFAULT NEWID(),
		[CREATE_DT] [DATETIME] NOT NULL DEFAULT (GETDATE()),
		[CHANGE_DT] [DATETIME] NOT NULL DEFAULT (GETDATE()),
		[MARKED] [BIT] NOT NULL DEFAULT ((0)),
		[VALUE] [NVARCHAR](150) NOT NULL DEFAULT(''),
		[BARCODE_TYPE_UID] [UNIQUEIDENTIFIER] NULL,
		[CONTRAGENT_UID] [UNIQUEIDENTIFIER] NULL,
		[NOMENCLATURE_ID] [INT] NULL,
		--[NOMENCLATURE_UNIT_ID] [INT] NULL,
		PRIMARY KEY CLUSTERED ([UID] ASC) 
		WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [ScalesFileGroup]
	) ON [ScalesFileGroup]
	EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ШК', 
		@level0type=N'SCHEMA', @level0name=N'db_scales', @level1type=N'TABLE', @level1name=N'BARCODES_V2'
	-- RECREATE BARCODE_TYPES_V2
	SET @INFO = '[BARCODE_TYPES_V2]'
	PRINT N'[+] RECREATE' + @INFO + ' ...'
	CREATE TABLE [db_scales].[BARCODE_TYPES_V2] (
		[UID] [UNIQUEIDENTIFIER] NOT NULL DEFAULT NEWID(),
		[CREATE_DT] [DATETIME] NOT NULL DEFAULT (GETDATE()),
		[CHANGE_DT] [DATETIME] NOT NULL DEFAULT (GETDATE()),
		[MARKED] [BIT] NOT NULL DEFAULT ((0)),
		[NAME] [NVARCHAR](100) NOT NULL DEFAULT(''),
		PRIMARY KEY CLUSTERED ([UID] ASC) 
		WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [ScalesFileGroup]
	) ON [ScalesFileGroup]
	EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Типы ШК (не редактировать)', 
		@level0type=N'SCHEMA', @level0name=N'db_scales', @level1type=N'TABLE', @level1name=N'BARCODE_TYPES_V2'
	-- FILL DATA BARCODE_TYPES_V2
	INSERT INTO [db_scales].[BARCODE_TYPES_V2] ([NAME]) VALUES
		(N'Code128'), (N'Code39'), (N'EAN128'), (N'EAN13'), (N'EAN8'), (N'ITF14')
	-- RECREATE CONTRAGENTS_V2
	SET @INFO = '[CONTRAGENTS_V2]'
	PRINT N'[+] RECREATE' + @INFO + ' ...'
	CREATE TABLE [db_scales].[CONTRAGENTS_V2] (
		[UID] [UNIQUEIDENTIFIER] NOT NULL DEFAULT NEWID(),
		[DWH_ID] [INT] NOT NULL,
		[CREATE_DT] [DATETIME] NOT NULL DEFAULT (GETDATE()),
		[CHANGE_DT] [DATETIME] NOT NULL DEFAULT (GETDATE()),
		[MARKED] [BIT] NOT NULL DEFAULT ((0)),
		[NAME] [NVARCHAR](200) NOT NULL DEFAULT(''),
		[FULL_NAME] [NVARCHAR](MAX) NOT NULL DEFAULT(''),
		[IDRREF] [UNIQUEIDENTIFIER] NULL,
		[XML] [XML] NULL,
		PRIMARY KEY CLUSTERED ([UID] ASC) 
		WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [ScalesFileGroup]
	) ON [ScalesFileGroup] TEXTIMAGE_ON [ScalesFileGroup]
	EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Контрагенты' , 
		@level0type=N'SCHEMA', @level0name=N'db_scales', @level1type=N'TABLE', @level1name=N'CONTRAGENTS_V2'
	-- INDEX
	CREATE INDEX [BARCODES_V2_IDX_BARCODE_TYPE_UID] ON [db_scales].[BARCODES_V2] ([BARCODE_TYPE_UID])
	CREATE INDEX [BARCODES_V2_IDX_CONTRAGENT_UID] ON [db_scales].[BARCODES_V2] ([CONTRAGENT_UID])
	CREATE INDEX [BARCODES_V2_IDX_NOMENCLATURE_ID] ON [db_scales].[BARCODES_V2] ([NOMENCLATURE_ID])
	--CREATE INDEX [BARCODES_V2_IDX_NOMENCLATURE_UNIT_ID] ON [db_scales].[BARCODES_V2] ([NOMENCLATURE_UNIT_ID])
	CREATE INDEX [CONTRAGENTS_V2_IDX_DWH_ID] ON [db_scales].[CONTRAGENTS_V2] ([DWH_ID])
	-- FOREIGN KEY
	ALTER TABLE [db_scales].[BARCODES_V2]  WITH CHECK ADD FOREIGN KEY([BARCODE_TYPE_UID]) REFERENCES [db_scales].[BARCODE_TYPES_V2] ([UID])
	ALTER TABLE [db_scales].[BARCODES_V2]  WITH CHECK ADD FOREIGN KEY([CONTRAGENT_UID]) REFERENCES [db_scales].[CONTRAGENTS_V2] ([UID])
	ALTER TABLE [db_scales].[BARCODES_V2]  WITH CHECK ADD FOREIGN KEY([NOMENCLATURE_ID]) REFERENCES [db_scales].[Nomenclature] ([ID])
	--ALTER TABLE [db_scales].[BARCODES_V2]  WITH CHECK ADD FOREIGN KEY([NOMENCLATURE_UNIT_ID]) REFERENCES [db_scales].[NomenclatureUnits] ([ID])
	-- COMMIT
	IF (@IS_COMMMIT = 1) BEGIN
		COMMIT TRAN
		PRINT N'[+] RECREATE TABLE ' + @INFO + ' IS COMMITED'
	END ELSE BEGIN
		ROLLBACK TRAN
		PRINT N'[-] RECREATE TABLE ' + @INFO + ' IS ROLLBACKED'
	END
END
------------------------------------------------------------------------------------------------------------------------
IF (@IS_SELECT = 1) BEGIN
	IF EXISTS (SELECT 1 FROM [sys].[tables] WHERE [NAME] = 'CONTRAGENTS_V2') BEGIN
		SET @INFO = CAST((SELECT COUNT(*) FROM [db_scales].[CONTRAGENTS_V2]) AS NVARCHAR(100))
		PRINT N'[ ] TABLE [CONTRAGENTS_V2] HAVE ' + @INFO + N' RECORDS'
	END ELSE BEGIN
		PRINT N'[!] TABLE [CONTRAGENTS_V2] DOES NOT EXISTS'
	END
	IF EXISTS (SELECT 1 FROM [sys].[tables] WHERE [NAME] = 'BARCODE_TYPES_V2') BEGIN
		SET @INFO = CAST((SELECT COUNT(*) FROM [db_scales].[BARCODE_TYPES_V2]) AS NVARCHAR(100))
		PRINT N'[ ] TABLE [BARCODE_TYPES_V2] HAVE ' + @INFO + N' RECORDS'
	END ELSE BEGIN
		PRINT N'[!] TABLE [BARCODE_TYPES_V2] DOES NOT EXISTS'
	END
	IF EXISTS (SELECT 1 FROM [sys].[tables] WHERE [NAME] = 'BARCODES_V2') BEGIN
		SET @INFO = CAST((SELECT COUNT(*) FROM [db_scales].[BARCODES_V2]) AS NVARCHAR(100))
		PRINT N'[ ] TABLE [BARCODES_V2] HAVE ' + @INFO + N' RECORDS'
	END ELSE BEGIN
		PRINT N'[!] TABLE [BARCODES_V2] DOES NOT EXISTS'
	END
END
------------------------------------------------------------------------------------------------------------------------
