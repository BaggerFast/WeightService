@typeparam TSelectItem
@typeparam TSelectType where TSelectType : ISet<TSelectItem>

@inherits SelectBase<TSelectItem, TSelectType>
@attribute [CascadingTypeParameter(nameof(TSelectItem))]
@attribute [CascadingTypeParameter(nameof(TSelectType))]

<CascadingValue Value="this">
  @ChildContent
</CascadingValue>

@code {
  [Parameter] public RenderFragment? ChildContent { get; set; }

  protected internal override async Task SetValue(TSelectItem item, bool withClose = true)
  {
    if (Value != null && !Value.Add(item)) Value.Remove(item);
    await TriggerValueChanged();
    if (!withClose) return;
    IsDropdownOpened = false;
    Reset();
  }

  protected internal override bool IsItemSelected(TSelectItem item) => Value != null && Value.Contains(item);
}