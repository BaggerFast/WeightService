@using ScalesDesktop.Source.Shared.Services
@using Blazor.Heroicons.Outline
@using ScalesDesktop.Source.Features.ErrorBoundaries

@implements IDisposable

<ScalesErrorBoundary>
  <PrinterErrorBoundary>
    @if (LabelContext.Plu == null)
    {
    <div class="flex size-full items-center justify-center p-6">
      <div class="flex flex-col gap-8">
        <div class="flex flex-col gap-2 text-center">
          <h3 class="font-medium text-lg xl:text-xl">
            @Localizer["PluDisplayUnselectedTitle"]
          </h3>
          <h4 class="text-muted-foreground text-sm xl:text-base">
            @Localizer["PluDisplayUnselectedDescription"]
          </h4>
        </div>
        <div class="text-muted-foreground text-xs text-center xl:text-sm">
          @Localizer["PluDisplayUnselectedStatusesInfo"]
          <PrinterIcon class="size-4 inline-block"/>
          <ScaleIcon class="size-4 inline-block"/>
        </div>
      </div>
    </div>
    }
    else
    {
      @ChildContent
    }
  </PrinterErrorBoundary>
</ScalesErrorBoundary>

@code {

  # region Injects

  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;
  [Inject] private LabelContext LabelContext { get; set; } = default!;

  # endregion

  [Parameter] public RenderFragment? ChildContent { get; set; }

  protected override void OnInitialized() => LabelContext.StateChanged += StateHasChanged;

  public void Dispose() => LabelContext.StateChanged -= StateHasChanged;
}
