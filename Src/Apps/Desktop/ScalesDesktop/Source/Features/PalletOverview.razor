@using System.Globalization
@using Append.Blazor.Printing
@using Microsoft.FluentUI.AspNetCore.Components
@using ScalesDesktop.Source.Shared.Services
@using Ws.Desktop.Models.Features.Pallets.Output

<div class="size-full flex flex-col overflow-x-hidden overflow-y-auto pt-6 pb-8 px-5">
  <div class="w-full flex px-2 justify-between items-center">
    <h2 class="font-medium text-xl">@WsDataLocalizer["ColPallet"] â„–@Pallet.Number</h2>
    <Button OnClick="@PrintPalletCard">
      @Localizer["BtnPrintPC"]
    </Button>
  </div>
  <div class="w-full grid grid-cols-1 gap-x-10 gap-y-4 px-2 lg:grid-cols-2 items-start">
    <FormDivider>@Localizer["PalletOverviewDividerCommon"]</FormDivider>
    <div class="space-y-2">
      <FieldLabel for="number">@WsDataLocalizer["ColNumber"]</FieldLabel>
      <InputTextField
        id="number"
        Value="@Pallet.Number.ToString()"
        ReadOnly/>
    </div>
    <div class="space-y-2">
      <FieldLabel for="pallet-man">@WsDataLocalizer["ColPalletMan"]</FieldLabel>
      <InputTextField
        id="pallet-man"
        Value="@Pallet.PalletMan.DisplayShortName"
        ReadOnly/>
    </div>
    <FormDivider>@WsDataLocalizer["ColPlu"]</FormDivider>
    @foreach (PluPalletInfo item in Pallet.Plus)
    {
      <div class="space-y-2">
        <FieldLabel for="@($"plu-name-{item.Number}")">@WsDataLocalizer["ColNumber"]</FieldLabel>
        <InputTextField
          id="@($"plu-name-{item.Number}")"
          Value="@item.Number.ToString()"
          ReadOnly
        />
      </div>
      <div class="space-y-2">
        <FieldLabel for="@($"plu-number-{item.Number}")">@WsDataLocalizer["ColName"]</FieldLabel>
        <InputTextField
          id="@($"plu-number-{item.Number}")"
          Value="@item.Name"
          ReadOnly
        />
      </div>
    }
    <FormDivider>@WsDataLocalizer["ColLabels"]</FormDivider>
    <div class="space-y-2">
      <FieldLabel for="barcode">@WsDataLocalizer["ColBarcode"]</FieldLabel>
      <InputTextField
        id="barcode"
        Value="@Pallet.Barcode"
        ReadOnly/>
    </div>
    <div class="space-y-2">
      <FieldLabel for="box-count">@WsDataLocalizer["ColCount"]</FieldLabel>
      <InputTextField
        id="box-count"
        Value="@Pallet.BoxCount.ToString()"
        ReadOnly/>
    </div>
    <div class="space-y-2">
      <FieldLabel for="netto">@WsDataLocalizer["ColNetWeight"]</FieldLabel>
      <InputTextField
        id="netto"
        Value="@Pallet.WeightNet.ToString(CultureInfo.InvariantCulture)"
        ReadOnly/>
    </div>
    <div class="space-y-2">
      <FieldLabel for="brutto">@WsDataLocalizer["ColGrossWeight"]</FieldLabel>
      <InputTextField
        id="brutto"
        Value="@Pallet.WeightBrutto.ToString(CultureInfo.InvariantCulture)"
        ReadOnly
      />
    </div>
    <div class="space-y-2">
      <FieldLabel for="tray">@WsDataLocalizer["ColPalletWeight"]</FieldLabel>
      <InputTextField
        id="tray"
        Value="@Pallet.WeightTray.ToString(CultureInfo.InvariantCulture)"
        ReadOnly
      />
    </div>
  </div>
</div>

@code {
  # region Injects

  [Inject] private IStringLocalizer<WsDataResources> WsDataLocalizer { get; set; } = default!;
  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;
  [Inject] private IPrintingService PrintingService { get; set; } = default!;
  [Inject] private IToastService ToastService { get; set; } = default!;
  [Inject] private PalletDocumentGenerator PalletDocumentGenerator { get; set; } = default!;

  # endregion

  [Parameter, EditorRequired] public PalletInfo Pallet { get; set; } = default!;

  private async Task PrintPalletCard()
  {
    try
    {
      string palletCardBase64 = PalletDocumentGenerator.CreateBase64(Pallet);
      await PrintingService.Print(new(palletCardBase64) { Base64 = true });
    }
    catch
    {
      ToastService.ShowError(Localizer["PalletDocumentGenerationError"]);
    }

  }
}