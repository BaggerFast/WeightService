@using Blazor.Heroicons.Outline

<div class="space-y-2 relative">
  <FieldLabel for="@HtmlId">@Label</FieldLabel>
  <InputTextField
    id="@HtmlId"
    Value="@Value"
    ReadOnly
  />
  @if (IsCopyable && !string.IsNullOrEmpty(Value))
  {
    <button
      type="button"
      onclick="@(() => SaveToClipboard(Value))"
      class="text-muted-foreground absolute opacity-50 hover:opacity-100 top-8 right-2 pt-px pr-px"
    >
      <ClipboardDocumentIcon class="size-5" />
    </button>
  }
</div>

@code {
  # region Injects

  [Inject] private IJSRuntime JsRuntime { get; set; } = default!;
  [Inject] private IToastService ToastService { get; set; } = default!;
  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;

  # endregion

  [Parameter] public string Label { get; set; } = string.Empty;
  [Parameter] public string Value { get; set; } = string.Empty;
  [Parameter] public string HtmlId { get; set; } = $"field-{Guid.NewGuid()}";
  [Parameter] public bool IsCopyable { get; set; }

  private async Task SaveToClipboard(string value)
  {
    try
    {
      await JsRuntime.InvokeVoidAsync("navigator.clipboard.writeText", value);
      ToastService.ShowInfo(Localizer["ToastValueCopiedToClipboard"]);
    }
    catch
    {
      ToastService.ShowError(Localizer["ToastValueCopiedToClipboardUnsuccessful"]);
    }
  }
}