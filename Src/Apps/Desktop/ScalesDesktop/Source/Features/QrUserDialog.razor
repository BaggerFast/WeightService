@using Blazor.Heroicons.Outline
@using ScalesDesktop.Source.Shared.Extensions
@using Blazor.QrCodeGen

@implements IDialogContentComponent

<Dialog Class="max-w-md !p-6">
  <div class="shrink-0 w-full flex items-center justify-between bg-background">
    <h3 class="font-semibold">Информация устройства</h3>
    <Button
      Variant="ButtonVariantType.Ghost"
      Size="ButtonSizeType.Icon"
      OnClick="@CloseDialog"
    >
      <XMarkIcon class="size-5"/>
    </Button>
  </div>
  <div class="w-full flex my-6 justify-center">
    <QrCode
      Text="@DeviceInfo()"
      Size="256"
      Options="@(new QrCodeOptions() { Size = 1024 })"
    />
  </div>
  <div class="flex w-full justify-end gap-2 pt-4">
    <Button OnClick="@CloseDialog">
      Закрыть
    </Button>
  </div>
</Dialog>

@code {
  [CascadingParameter] public FluentDialog Dialog { get; set; } = default!;

  private async Task CloseDialog() => await Dialog.CloseAsync();

  [Pure]
  private static string DeviceInfo()
  {
    NetworkInfo networkInfo = WindowsUtils.GetNetworkInfo();

    return JsonSerializer.Serialize(
      new Dictionary<string, object> {
        { "System", new Dictionary<string, string>
        {
          { "Name", WindowsUtils.GetHost() },
          { "BiosGuid", WindowsUtils.GetBiosId().ToString() },
        }},
        { "Network", new Dictionary<string, string> {
          { "Ip", networkInfo.Ip.ToString() },
          { "Mac", networkInfo.Mac.Format('-') },
          { "Type", networkInfo.Type },
        }},
      }
    );
  }
}