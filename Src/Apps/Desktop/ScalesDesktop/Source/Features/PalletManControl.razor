@using Blazor.Heroicons.Outline
@using ScalesDesktop.Source.Shared.Services.Endpoints
@using ScalesDesktop.Source.Shared.Services.Stores
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<div class="flex justify-between items-center w-full">
  <div class="size-12 shrink-0 rounded-full flex items-center justify-center bg-secondary">
    <UserIcon class="size-6" />
  </div>
  <div class="flex w-full flex-col px-3 justify-start">
    <span class="font-medium text-sm truncate">@PalletManState.Value.PalletMan?.Fio.DisplayShortName</span>
    <UseParameterlessEndpoint Endpoint="@ArmEndpoints.ArmEndpoint" Context="query">
      @if (query.HasData)
      {
        <span class="truncate text-sm">@query.Data.Warehouse.Name</span>
      }
      else
      {
        <Skeleton Class="w-28 h-4"/>
      }
    </UseParameterlessEndpoint>
  </div>
  <Button
    Class="shrink-0 border"
    OnClick="@LogoutPalletMan"
    Variant="ButtonVariantType.Secondary"
  >
    <ArrowLeftOnRectangleIcon class="size-4 mr-2" />
    @Localizer["BtnExit"]
  </Button>
</div>

@code {
  # region Injects

  [Inject] private IState<PalletManState> PalletManState { get; set; } = default!;
  [Inject] private IDispatcher Dispatcher { get; set; } = default!;
  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;
  [Inject] private PalletEndpoints PalletEndpoints { get; set; } = default!;
  [Inject] private PluEndpoints PluEndpoints { get; set; } = default!;
  [Inject] private ArmEndpoints ArmEndpoints { get; set; } = default!;

  # endregion

  private void LogoutPalletMan()
  {
    Dispatcher.Dispatch(new ResetPalletManAction());
    PalletEndpoints.PiecePalletsEndpoint.InvalidateAll();
    PluEndpoints.PiecePlusEndpoint.InvalidateAll();
  }
}