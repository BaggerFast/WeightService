@using BarcodeStandard
@using SkiaSharp;
@using Ws.Desktop.Models.Features.Pallets.Output;
@using Type = BarcodeStandard.Type

<div style="width: 100%; display: flex; flex-direction: column; gap: 1.2rem; font-family: Arial,serif; padding: 1rem; box-sizing: border-box;">
  <span style="font-weight: 600; font-size: 1.5rem; text-align: center;">@WsDataLocalizer["ColPalletCard"] â„–@Pallet.Number</span>
  <div style="display: flex; flex-direction: column; gap: 0.5rem;">
    <span>@WsDataLocalizer["ColDate"]</span>
    <span style="font-size: 3.7rem; font-weight: 600;">@Pallet.ProdDt.ToString("dd.MM.yyyy")</span>
  </div>
  <div style="width: 100%;display: inline-grid; grid-template-columns: repeat(2, minmax(0, 1fr));">
    <span style="align-self: center;">@WsDataLocalizer["ColNetWeight"]</span>
    <div style="width: 100%; border: 1px black solid; align-self: center; padding: 0.3rem; border-bottom: none; box-sizing: border-box;">
      @Pallet.WeightNet.ToString(CultureInfo.InvariantCulture) @WsDataLocalizer["MeasureKg"]
    </div>
    <span style="align-self: center;">@WsDataLocalizer["ColGrossWeight"]</span>
    <div style="width: 100%; border: 1px black solid; align-self: center; padding: 0.3rem; border-bottom: none; box-sizing: border-box;">
      @Pallet.WeightBrutto.ToString(CultureInfo.InvariantCulture) @WsDataLocalizer["MeasureKg"]
    </div>
    <span style="align-self: center;">@WsDataLocalizer["ColTrayWeight"]</span>
    <div style="width: 100%; border: 1px black solid; align-self: center; padding: 0.3rem; border-bottom: none; box-sizing: border-box;">
      @Pallet.WeightTray.ToString(CultureInfo.InvariantCulture) @WsDataLocalizer["MeasureKg"]
    </div>
    <span style="align-self: center;">@WsDataLocalizer["ColGrossWeight"] + @WsDataLocalizer["ColTrayWeight"]</span>
    <div style="width: 100%; border: 1px black solid; align-self: center; padding: 0.3rem; border-bottom: none; box-sizing: border-box;">
      @((Pallet.WeightBrutto+Pallet.WeightTray).ToString(CultureInfo.InvariantCulture)) @WsDataLocalizer["MeasureKg"]
    </div>
    <span style="align-self: center;">@WsDataLocalizer["ColBoxCount"]</span>
    <div style="width: 100%; border: 1px black solid; align-self: center; padding: 0.3rem; border-bottom: none; box-sizing: border-box;">
      @Pallet.BoxCount.ToString() @WsDataLocalizer["MeasurePc"]
    </div>
    <span style="align-self: center;">@WsDataLocalizer["ColWarehouse"]</span>
    <div style="width: 100%; border: 1px black solid; align-self: center; padding: 0.3rem; border-bottom: none; box-sizing: border-box;">
      @Pallet.Warehouse.Name
    </div>
    <span style="align-self: center;">
      @WsDataLocalizer["ColLine"]
    </span>
    <div style="width: 100%; border: 1px black solid; align-self: center; padding: 0.3rem; border-bottom: none; box-sizing: border-box;">
      @Pallet.Arm
    </div>
    <span style="align-self: center;">@WsDataLocalizer["ColPalletMan"]</span>
    <div style="width: 100%; border: 1px black solid; align-self: center; padding: 0.3rem; border-bottom: none; box-sizing: border-box;">
      @Pallet.PalletMan.DisplayFullName
    </div>
    <span style="align-self: center;">@WsDataLocalizer["ColKneading"]</span>
    <div style="width: 100%; border: 1px black solid; align-self: center; padding: 0.3rem; box-sizing: border-box;">
      @string.Join(",", Pallet.Kneadings)
    </div>
  </div>
  <table style="border-collapse: collapse;">
    <thead style="font-weight: 300;">
    <tr>
      <th style="border: 1px black solid; width: 50%; padding: 0.2rem;">@WsDataLocalizer["ColNomenclature"]</th>
      <th style="border: 1px black solid; width: 12.5%; padding: 0.2rem;">@WsDataLocalizer["ColNetWeight"] (@WsDataLocalizer["MeasureKg"])</th>
      <th style="border: 1px black solid; width: 12.5%; padding: 0.2rem;">@WsDataLocalizer["ColGrossWeight"] (@WsDataLocalizer["MeasureKg"])</th>
      <th style="border: 1px black solid; width: 12.5%; padding: 0.2rem;">@WsDataLocalizer["ColProductUnitsCount"] (@WsDataLocalizer["MeasurePc"])</th>
      <th style="border: 1px black solid; width: 12.5%; padding: 0.2rem;">@WsDataLocalizer["ColBoxes"] (@WsDataLocalizer["MeasurePc"])</th>
    </tr>
    </thead>
    <tbody>
    @foreach (PluPalletInfo plu in Pallet.Plus)
    {
      <tr>
        <td style="border: 1px black solid; padding: 0.2rem; font-weight: 600; font-size: 2.5rem;">@plu.Name</td>
        <td style="border: 1px black solid; padding: 0.2rem;">@plu.WeightNet.ToString(CultureInfo.InvariantCulture)</td>
        <td style="border: 1px black solid; padding: 0.2rem;">@plu.WeightBrutto.ToString(CultureInfo.InvariantCulture)</td>
        <td style="border: 1px black solid; padding: 0.2rem;">@plu.BundleCount.ToString()</td>
        <td style="border: 1px black solid; padding: 0.2rem;">@plu.BoxCount.ToString()</td>
      </tr>
    }
    <tr style="font-weight: 600;">
      <td style="border: 1px black solid; padding: 0.2rem;">@WsDataLocalizer["ColTotal"]</td>
      <td style="border: 1px black solid; padding: 0.2rem;">@Pallet.WeightNet.ToString(CultureInfo.InvariantCulture)</td>
      <td style="border: 1px black solid; padding: 0.2rem;">@Pallet.WeightBrutto.ToString(CultureInfo.InvariantCulture)</td>
      <td style="border: 1px black solid; padding: 0.2rem;">@Pallet.BundleCount.ToString()</td>
      <td style="border: 1px black solid; padding: 0.2rem;">@Pallet.BoxCount.ToString()</td>
    </tr>
    </tbody>
  </table>

  @if (!string.IsNullOrWhiteSpace(Base64BarcodeImage))
  {
    <div style="width: 100%; gap: 0.4rem; display: flex; flex-direction: column;">
      <img src="data:image/png;base64,@Base64BarcodeImage" alt="Barcode Image" style="padding-top: 1rem;" />
      <span style="text-align: center; font-size: 2.2rem;">@Pallet.Barcode</span>
    </div>

  }
</div>

@code {
  [Inject] private IStringLocalizer<WsDataResources> WsDataLocalizer { get; set; } = default!;
  [Parameter, EditorRequired] public PalletInfo Pallet { get; set; } = default!;

  private string Base64BarcodeImage { get; set; } = string.Empty;

  protected override void OnInitialized()
  {
    base.OnInitialized();
    Barcode b = new();
    SKImage? img = b.Encode(Type.Code128, Pallet.Barcode, 500, 70);

    if (img == null) return;
    using SKData data = img.Encode(SKEncodedImageFormat.Png, 100);
    Base64BarcodeImage = Convert.ToBase64String(data.ToArray());
  }
}
