@using Blazor.Heroicons.Outline

<div class="flex gap-3 w-full items-center pb-6">
  <input
    type="number"
    inputmode="numeric"
    value="@Value"
    @oninput="OnValueChanged"
    disabled="@Disabled"
    placeholder="Введите номер документа..."
    class="flex h-10 w-full rounded-md border bg-background px-3 py-2 text-sm placeholder:text-muted-foreground focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50"
  />
  <Button
    OnClick="@StartScanning"
    Disabled="@Disabled"
    Variant="ButtonVariantType.Outline"
    Class="!h-10"
  >
    <CameraIcon class="size-5 mr-2" />
    <span>Отсканировать</span>
  </Button>
</div>

@code {
  [Parameter] public string Value { get; set; } = string.Empty;
  [Parameter] public EventCallback<string> ValueChanged { get; set; }
  [Parameter] public bool Disabled { get; set; }

  protected override void OnInitialized()
  {
    base.OnInitialized();
    MessagingCenter.Subscribe<ScanPage, string>(this, "ScanCompleted", (sender, result) =>
    {
      if (string.IsNullOrWhiteSpace(result)) return;
      Value = result;
      ValueChanged.InvokeAsync(Value);
      StateHasChanged();
    });
  }

  private async Task StartScanning()
  {
    if (Application.Current?.MainPage == null) return;
    await Application.Current.MainPage.Navigation.PushModalAsync(new ScanPage());
  }

  private async void OnValueChanged(ChangeEventArgs e)
  {
    string enteredValue = new(e.Value?.ToString()?.Where(char.IsDigit).ToArray());
    if (enteredValue == Value) return;
    Value = enteredValue;
    await ValueChanged.InvokeAsync(Value);
  }
}