@using DeviceControl.Source.Shared.Services
@using Ws.DeviceControl.Models
@using Ws.DeviceControl.Models.Features.Print.Labels
@inherits SectionDataGridBase<LabelDto>
@attribute [Route(RouteUtils.SectionLabels)]
@rendermode InteractiveServer

<PageTitle>DeviceControl - @Localizer["SectionLabels"]</PageTitle>

<UseParameterlessEndpoint
  Endpoint="@OperationsEndpoints.LabelsEndpoint"
  Options="@(new() { RefetchInterval=TimeSpan.FromMinutes(5) })"
  Context="labelsQuery"
>
  <PageHeader>
    <span>@Localizer["SectionLabels"]</span>
    <DataGridItemsCounter ItemsCount="@(labelsQuery.Data?.Length ?? 0)" IsLoading="labelsQuery.IsLoading"/>
    <DataGridActionReload OnClick="@labelsQuery.RefetchAsync" IsLoading="labelsQuery.IsFetching" />
  </PageHeader>

  <DataGridWrapper>
    <DataGridContainer
      TItem="LabelDto"
      Items="@(labelsQuery.HasData ? labelsQuery.Data : [])"
      OnItemSelect="@(item => OpenUpdateFormModal(item))"
      IsFilterable
    >
      <ColumnsContent>
        <DataGridColumn
          Caption="@WsDataLocalizer["ColCreateDt"]"
          Field="@nameof(LabelDto.CreateDt)"
          Filterable="false"
          Width="10%"
        />
        <DataGridColumn
          Caption="@WsDataLocalizer["ColProductDt"]"
          Field="@nameof(LabelDto.ProductDt)"
          DisplayFormat="{0:dd.MM.yyyy}"
          Filterable="false"
          Width="10%"
        />

        <DataGridColumn
          Caption="@WsDataLocalizer["ColPluNumber"]"
          Field="@($"{nameof(LabelDto.Plu)}.{nameof(ProxyDto.Name)}")"
          Width="18%"
        />

        <DataGridColumn
          Caption="@WsDataLocalizer["ColBarcodeTop"]"
          Field="@nameof(LabelDto.BarcodeTop)"
          Sortable="false"
          Width="20%"
        />

        <DataGridColumn
          Caption="@WsDataLocalizer["ColLine"]"
          Field="@($"{nameof(LabelDto.Arm)}.{nameof(ProxyDto.Name)}")"
          Width="15%"
        />
        <DataGridColumn
          Caption="@WsDataLocalizer["ColWarehouse"]"
          Field="@($"{nameof(LabelDto.Warehouse)}.{nameof(ProxyDto.Name)}")"
          Width="15%"
        />

        <DataGridColumn
          Caption="@WsDataLocalizer["ColType"]"
          Field="@nameof(LabelDto.IsWeight)"
          Filterable="false"
          Width="7%"
        >
          <DisplayTemplate>
            @if (context.Plu != null)
            {
            <p>
              @(context.IsWeight ?
              WsDataLocalizer["ColPluWeight"] : WsDataLocalizer["ColPluPiece"])
            </p>
            }
          </DisplayTemplate>
        </DataGridColumn>
      </ColumnsContent>
      <ContextMenuContent>
        <DataGridActionViewItem OnClick="@(() => ContextFuncWrapper(context.Item, context.CloseContextMenu, async item => await OpenUpdateFormModal(item)))" />
        <DataGridActionOpenInNewTab OnClick="@(() => ContextFuncWrapper(context.Item, context.CloseContextMenu, async item => await OpenItemInNewTab(item)))" />
      </ContextMenuContent>
    </DataGridContainer>
  </DataGridWrapper>
</UseParameterlessEndpoint>

@code {
  # region Injects

  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;
  [Inject] private IStringLocalizer<WsDataResources> WsDataLocalizer { get; set; } = default!;
  [Inject] private OperationsEndpoints OperationsEndpoints { get; set; } = default!;
  [Inject] private IWebApi WebApi { get; set; } = default!;

  # endregion

  protected override async Task OpenUpdateFormModal(LabelDto item) =>
    await OpenModalWithItem<LabelsViewDialog>(item);

  protected override async Task OpenItemInNewTab(LabelDto item) =>
    await OpenLinkInNewTab($"{RouteUtils.SectionLabels}?id={item.Id}");

  protected override Task<LabelDto> SearchByUidAction(Guid uid) =>
    WebApi.GetLabelByUid(uid);
}
