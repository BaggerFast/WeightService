@using DeviceControl.Source.Shared.Services
@using Ws.DeviceControl.Models.Dto.Database
@attribute [Route($"{RouteUtils.SectionTables}")]
@attribute [Authorize(Policy = PolicyEnum.Admin)]
@rendermode InteractiveServer

<UseParameterlessEndpoint Endpoint="@DatabaseApi.TablesEndpoint" Context="tablesQuery">
  <PageHeader>
    <span>@Localizer["SectionTables"]</span>
    <DataGridItemsCounter ItemsCount="@(tablesQuery.Data?.Length ?? 0)" IsLoading="tablesQuery.IsFetching" />
    <DataGridActionReload OnClick="@tablesQuery.RefetchAsync" IsLoading="tablesQuery.IsFetching" />
  </PageHeader>

  <DataGridWrapper>
    <DataGridContainer
      TItem="DataBaseTableDto"
      Items="@(tablesQuery.HasData ? tablesQuery.Data : [])"
      IsFilterable
    >
      <ColumnsContent>
        <DataGridColumn
          Caption="@WsDataLocalizer["ColScheme"]"
          Field="@nameof(DataBaseTableDto.Schema)"
          Width="20%"
          Sortable="false"
          FilterMethod="DataGridColumnFilterMethod.Equals"
          FilterCellClass="!font-normal"
        >
          <FilterTemplate>
            @{ context.SearchValue = Scheme; }
            @if (tablesQuery.HasData)
            {
              <SelectSingle
                TItem="string?"
                Items="@(tablesQuery.Data.Select(x => x.Schema).ToHashSet().Union([null]))"
                @bind-SelectedItem="@Scheme"
                @bind-SelectedItem:after="@(() => context.TriggerFilterChange(Scheme))"
                Placeholder="@Localizer["SelectItemNotSelected"]"
                ItemDisplayName="@(item => item ?? Localizer["SelectItemNotSelected"])"
              />
            }
            else
            {
              <Skeleton Class="h-10 w-full" />
            }
          </FilterTemplate>
        </DataGridColumn>

        <DataGridColumn
          Caption="@WsDataLocalizer["ColName"]"
          Field="@nameof(DataBaseTableDto.Table)"
          Width="30%"
        />

        <DataGridColumn
          Caption="Количество записей"
          Field="@nameof(DataBaseTableDto.Rows)"
          Width="25%"
          Filterable="false"
        />
        <DataGridColumn
          Caption="@($"{WsDataLocalizer["ColSize"]} ({WsDataLocalizer["MeasureMb"]})")"
          Field="@nameof(DataBaseTableDto.UsedMb)"
          Width="25%"
          Filterable="false"
        />
      </ColumnsContent>
    </DataGridContainer>
  </DataGridWrapper>
</UseParameterlessEndpoint>

@code {
  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;
  [Inject] private IStringLocalizer<WsDataResources> WsDataLocalizer { get; set; } = default!;
  [Inject] private DatabaseApi DatabaseApi { get; set; } = default!;

  private string? Scheme { get; set; }
}