@using DeviceControl.Source.Shared.Services
@using Ws.DeviceControl.Models.Models.Database
@attribute [Route($"{RouteUtils.SectionMigrations}")]
@attribute [Authorize(Policy = PolicyEnum.Admin)]
@rendermode InteractiveServer

<UseParameterlessEndpoint Endpoint="@DatabaseApi.MigrationsEndpoint" Context="migrationsQuery">
  <PageHeader>
    <span>@Localizer["SectionMigrations"]</span>
    <DataGridItemsCounter ItemsCount="@(migrationsQuery.Data?.Length ?? 0)" IsLoading="migrationsQuery.IsFetching" />
    <DataGridActionReload OnClick="@migrationsQuery.RefetchAsync" IsLoading="migrationsQuery.IsFetching" />
  </PageHeader>

  <DataGridWrapper>
    <DataGridContainer
      TItem="MigrationHistoryEntry"
      Items="@(migrationsQuery.HasData ? migrationsQuery.Data : [])"
    >
      <ColumnsContent>
        <DataGridColumn
          Caption="@WsDataLocalizer["ColVersion"]"
          Field="@nameof(MigrationHistoryEntry.ProductVersion)"
          Width="10%"
        />
        <DataGridColumn
          Caption="@WsDataLocalizer["ColName"]"
          Field="@nameof(MigrationHistoryEntry.MigrationId)"
          Width="90%"
        />
      </ColumnsContent>
    </DataGridContainer>
  </DataGridWrapper>
</UseParameterlessEndpoint>

@code {
  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;
  [Inject] private IStringLocalizer<WsDataResources> WsDataLocalizer { get; set; } = default!;
  [Inject] private DatabaseApi DatabaseApi { get; set; } = default!;
}