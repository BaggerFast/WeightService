@using Ws.Domain.Models.Entities.Print
@inherits SectionDataGridPageBase<Ws.Domain.Models.Entities.Print.Template>
@attribute [Route($"{RouteUtils.SectionTemplates}{RouteUtils.SectionQrlQuery}")]
@attribute [Authorize(Policy = PolicyEnum.Admin)]
@rendermode InteractiveServer

<PageTitle>DeviceControl - @Localizer["SectionTemplates"]</PageTitle>

<PageHeader>
  <span>@Localizer["SectionTemplates"]</span>
  <DataGridItemsCounter ItemsCount="@SectionItems.Count()" IsLoading="IsLoading"/>
  <DataGridActionReload OnClick="@UpdateData" IsLoading="IsLoading" />
  <DataGridActionCreate OnClick="@OpenSectionCreateForm" />
</PageHeader>

<DataGridWrapper>
  <DataGridContainer
    TItem="Template"
    Items="SectionItems"
    OnItemSelect="@(item => OpenDataGridEntityModal(item))"
    IsFilterable
  >
    <ColumnsContent>
      <DataGridColumn
        Caption="@WsDataLocalizer["ColChangeDt"]"
        Field="@nameof(Template.ChangeDt)"
        Width="20%"
        Filterable="false"
      />

      <DataGridColumn
        Caption="@WsDataLocalizer["ColName"]"
        Field="@nameof(Template.Name)"
        Width="20%"
      />

      <DataGridColumn
        Caption="@WsDataLocalizer["ColType"]"
        Width="20%"
        Field="@nameof(Template.IsWeight)"
        FilterCellClass="!font-normal"
      >
        <FilterTemplate>
          @{ context.SearchValue = Type; }
          <SelectSingle
            TItem="bool?"
            Items="@([false, true, null])"
            @bind-SelectedItem="@Type"
            @bind-SelectedItem:after="@(() => context.TriggerFilterChange(Type))"
            Placeholder="@Localizer["SelectItemNotSelected"]"
            ItemDisplayName="@(item => item == null ? Localizer["SelectItemNotSelected"] : GetTemplateTypeName(item.Value))"
          />
        </FilterTemplate>
        <DisplayTemplate>
          <span>
            @GetTemplateTypeName(context.IsWeight)
          </span>
        </DisplayTemplate>
      </DataGridColumn>

      <DataGridColumn
        Caption="@WsDataLocalizer["ColSize"]"
        Field="@nameof(Template.SizeView)"
        Width="20%"
        Filterable="false"
      />
    </ColumnsContent>
    <ContextMenuContent>
      <DataGridActionViewItem OnClick="@(() => ContextFuncWrapper(context.Item, context.CloseContextMenu, item => OpenDataGridEntityModal(item)))" />
      <DataGridActionOpenInNewTab OnClick="@(() => ContextFuncWrapper(context.Item, context.CloseContextMenu, item => OpenItemInNewTab(item)))" />
      <DataGridActionDeleteItem OnClick="@(() => ContextFuncWrapper(context.Item, context.CloseContextMenu, item => DeleteItem(item)))" />
    </ContextMenuContent>
  </DataGridContainer>
</DataGridWrapper>
