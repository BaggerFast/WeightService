@using Blazor.Heroicons.Outline
@using DeviceControl.Source.Shared.Api.Web.Endpoints
@using DeviceControl.Source.Shared.Helpers
@using DeviceControl.Source.Shared.Services.Stores
@using Ws.DeviceControl.Models
@using Ws.DeviceControl.Models.Features.Devices.Arms.Commands
@using Ws.DeviceControl.Models.Features.Devices.Arms.Queries
@inherits SectionFormBase<ArmCreateDto>

<SectionForm
  FormModel="@FormModel"
  Validator="@(new ArmCreateValidator(WsDataLocalizer))"
  OnCancelAction="@OnCancelAction"
  OnSubmitAction="@CreateItem"
>
  <FieldsContent>

    <SectionNumericField
      Label="@WsDataLocalizer["ColNumber"]"
      @bind-Value="@FormModel.Number"
      Min="10000"
      Max="99999"
      For="@(() => FormModel.Number)"
    />

    <SectionTextField
      Label="@WsDataLocalizer["ColName"]"
      @bind-Value="@FormModel.Name"
      For="@(() => FormModel.Name)"
      MaxLength="32"/>

    <SectionSelectSingleField
      TItem="ArmType"
      Label="@WsDataLocalizer["ColType"]"
      Items="LineTypes"
      @bind-Value="@FormModel.Type"
      ItemDisplayName="item => Localizer[item.GetDescription()]"
      For="@(() => FormModel.Type)"/>

    <FormDivider>@WsDataLocalizer["ColDevice"]</FormDivider>

    <SectionGuidField
      Label="@WsDataLocalizer["ColSystemKey"]"
      @bind-Value="@FormModel.SystemKey"
      For="@(() => FormModel.SystemKey)"/>

    <SectionInputWrapper
      Path="@RedirectHelper.ToPrinter(FormModel.PrinterId)"
      Label="@WsDataLocalizer["ColPrinter"]"
      HtmlFor="arm-printer">
      <UseEndpoint
        Endpoint="@DevicesEndpoints.ProxyPrintersEndpoint"
        Arg="@ProductionSiteState.Value.ProductionSite.Id"
        Context="printersQuery">
        @if (printersQuery.HasData)
        {
          <SelectSingle
            TItem="ProxyDto"
            HtmlId="arm-printer"
            Items="printersQuery.Data"
            Value="@printersQuery.Data.SingleOrDefault(x => x.Id == FormModel.PrinterId)"
            ValueChanged="@(value => FormModel.PrinterId = value?.Id ?? Guid.Empty)"
            Placeholder="@Localizer["FormPrinterDefaultPlaceholder"]"
            EmptyPlaceholder="@Localizer["FormSelectEmptyDefaultPlaceholder"]"
            SearchPlaceholder="@Localizer["FormSelectSearchDefaultPlaceholder"]"
            ItemDisplayName="@(item => item.Name)"
            Filterable/>
        }
        else
        {
          <Skeleton class="h-10 w-full"/>
        }
      </UseEndpoint>
      <FieldValidation For="@(() => FormModel.PrinterId)"/>
    </SectionInputWrapper>

    <FormDivider>@Localizer["FieldLocation"]</FormDivider>

    <SectionReadOnlyField
      Label="@WsDataLocalizer["ColProductionSite"]"
      Value="@ProductionSiteState.Value.ProductionSite.Name"
      Path="@RedirectHelper.ToProductionSite(ProductionSiteState.Value.ProductionSite.Id)"/>

    <SectionInputWrapper
      Path="@RedirectHelper.ToWarehouse(FormModel.WarehouseId)"
      Label="@WsDataLocalizer["ColWarehouse"]"
      HtmlFor="arm-warehouse">
      <UseEndpoint
        Endpoint="@ReferencesEndpoints.ProxyWarehousesEndpoint"
        Arg="@ProductionSiteState.Value.ProductionSite.Id"
        Context="warehousesQuery">
        @if (warehousesQuery.HasData)
        {
          <SelectSingle
            TItem="ProxyDto"
            HtmlId="arm-warehouse"
            Items="warehousesQuery.Data"
            Value="@warehousesQuery.Data.SingleOrDefault(x => x.Id == FormModel.WarehouseId)"
            ValueChanged="@(value => FormModel.WarehouseId = value?.Id ?? Guid.Empty)"
            Placeholder="@Localizer["FormWarehouseDefaultPlaceholder"]"
            EmptyPlaceholder="@Localizer["FormSelectEmptyDefaultPlaceholder"]"
            SearchPlaceholder="@Localizer["FormSelectSearchDefaultPlaceholder"]"
            ItemDisplayName="@(item => item.Name)"
            Filterable/>
        }
        else
        {
          <Skeleton class="h-10 w-full"/>
        }
      </UseEndpoint>
      <FieldValidation For="@(() => FormModel.WarehouseId)"/>
    </SectionInputWrapper>
  </FieldsContent>
</SectionForm>

@code {
  # region Injects

  [Inject] private IStringLocalizer<WsDataResources> WsDataLocalizer { get; set; } = default!;
  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;
  [Inject] private IState<ProductionSiteState> ProductionSiteState { get; set; } = default!;
  [Inject] private DevicesEndpoints DevicesEndpoints { get; set; } = default!;
  [Inject] private ReferencesEndpoints ReferencesEndpoints { get; set; } = default!;
  [Inject] private RedirectHelper RedirectHelper { get; set; } = default!;
  [Inject] private IWebApi WebApi { get; set; } = default!;

  # endregion

  private IEnumerable<ArmType> LineTypes { get; } = Enum.GetValues(typeof(ArmType)).Cast<ArmType>().ToList();

  protected override async Task CreateItemAction(ArmCreateDto item)
  {
    ArmDto dto = await WebApi.CreateArm(item);
    DevicesEndpoints.AddArm(ProductionSiteState.Value.ProductionSite.Id, dto);
  }
}
