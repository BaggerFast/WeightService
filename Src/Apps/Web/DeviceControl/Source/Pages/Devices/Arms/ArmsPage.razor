@using DeviceControl.Source.Features
@using DeviceControl.Source.Shared.Services
@using Blazor.Heroicons.Outline
@using Ws.DeviceControl.Models
@using Ws.DeviceControl.Models.Dto.Devices.Arms.Queries
@using Ws.Shared.Constants

@inherits SectionPageBase<Ws.DeviceControl.Models.Dto.Devices.Arms.Queries.ArmDto>
@attribute [Route(RouteUtils.SectionLines)]
@attribute [Authorize(Policy = PolicyEnum.Support)]
@rendermode InteractiveServer

<PageTitle>DeviceControl - @Localizer["SectionLines"]</PageTitle>

<UserProductionSiteErrorSuspense>
  <UseEndpoint
    Endpoint="@DevicesEndpoints.ArmsEndpoint"
    Arg="@ProductionSiteState.Value.ProductionSite.Id"
    Options="@DefaultEndpointOptions"
    Context="armsQuery"
  >
    <PageHeader>
      <span>@Localizer["SectionLines"]</span>
      <DataGridItemsCounter ItemsCount="@(armsQuery.Data?.Length ?? 0)" IsLoading="armsQuery.IsLoading"/>
      <DataGridActionReload OnClick="@armsQuery.RefetchAsync" IsLoading="armsQuery.IsFetching" />
      <DataGridActionCreate OnClick="@OpenCreateFormModal"/>
    </PageHeader>

    <DataGridWrapper>
      <DataGridContainer
        TItem="ArmDto"
        Items="@(armsQuery.HasData ? armsQuery.Data : [])"
        OnItemSelect="@(item => OpenUpdateFormModal(item))"
        IsFilterable
      >
        <ColumnsContent>
          <DataGridColumn
            Field="@(nameof(ArmDto.Type))"
            Caption="@WsDataLocalizer["ColType"]"
            Width="1rem"
            Filterable="false"
          >
            <DisplayTemplate>
              <div class="size-full flex items-center justify-center">
                @switch (context.Type)
                {
                  case ArmType.Pc:
                    <ComputerDesktopIcon class="size-5"/>
                    break;
                  case ArmType.Tablet:
                    <DeviceTabletIcon class="size-5"/>
                    break;
                  case ArmType.Universal:
                    <ServerIcon class="size-5"/>
                    break;
                  default:
                    <ExclamationTriangleIcon class="size-5 text-destructive"/>
                    break;
                }
              </div>
            </DisplayTemplate>
          </DataGridColumn>
          <DataGridColumn
            Caption="@WsDataLocalizer["ColVersion"]"
            Field="@nameof(ArmDto.Version)"
            Width="2rem"
            Filterable="false"
          />
          <DataGridColumn
            Caption="@WsDataLocalizer["ColLine"]"
            Field="@nameof(ArmDto.Name)"
            Width="20%"
          />
          <DataGridColumn
            Caption="@WsDataLocalizer["ColProductionSite"]"
            Width="20%"
            FilterCellClass="!font-normal"
          >
            <FilterTemplate>
              <ProductionSiteSelect />
            </FilterTemplate>
            <DisplayTemplate>
              @ProductionSiteState.Value.ProductionSite.Name
            </DisplayTemplate>
          </DataGridColumn>
          <DataGridColumn
            Caption="@WsDataLocalizer["ColPcName"]"
            Field="@nameof(ArmDto.PcName)"
            Width="15%"
          />
          <DataGridColumn
            Caption="@WsDataLocalizer["ColPrinter"]"
            Field="Printer.Name"
            Width="15%"
          />
          <DataGridColumn
            Caption="@WsDataLocalizer["ColCounter"]"
            Field="@nameof(ArmDto.Counter)"
            Width="15%"
            Filterable="false"
          />
        </ColumnsContent>
        <ContextMenuContent>
          <DataGridActionViewItem OnClick="@(() => ContextFuncWrapper(context.Item, context.CloseContextMenu, item => OpenUpdateFormModal(item)))" />
          <DataGridActionOpenInNewTab OnClick="@(() => ContextFuncWrapper(context.Item, context.CloseContextMenu, item => OpenItemInNewTab(item)))" />
          <DataGridActionDeleteItem OnClick="@(() => ContextFuncWrapper(context.Item, context.CloseContextMenu, item => DeleteItem(item)))" />
        </ContextMenuContent>
      </DataGridContainer>
    </DataGridWrapper>
  </UseEndpoint>
</UserProductionSiteErrorSuspense>

@code {
  #region Inject

  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;
  [Inject] private IStringLocalizer<WsDataResources> WsDataLocalizer { get; set; } = default!;
  [Inject] private DevicesEndpoints DevicesEndpoints { get; set; } = default!;
  [Inject] private IState<ProductionSiteState> ProductionSiteState { get; set; } = default!;
  [Inject] private IWebApi WebApi { get; set; } = default!;

  #endregion

  protected override async Task OpenCreateFormModal() =>
    await OpenModal<ArmsCreateDialog>();

  protected override async Task OpenUpdateFormModal(ArmDto item) =>
    await OpenModalWithItem<ArmsUpdateDialog>(item);

  protected override async Task OpenItemInNewTab(ArmDto item) =>
    await OpenLinkInNewTab($"{RouteUtils.SectionLines}?id={item.Id}");

  protected override Task<ArmDto> SearchByUidAction(Guid uid) =>
    WebApi.GetArmByUid(uid);

  protected override async Task DeleteItemAction(ArmDto item)
  {
    await WebApi.DeleteArm(item.Id);
    DevicesEndpoints.DeleteArm(ProductionSiteState.Value.ProductionSite.Id, item.Id);
  }
}
