@using DeviceControl.Source.Shared.Api.Web.Endpoints
@using DeviceControl.Source.Shared.Services.Stores
@using Ws.DeviceControl.Models
@using Ws.DeviceControl.Models.Features.References.Warehouses.Commands
@using Ws.DeviceControl.Models.Features.References.Warehouses.Queries
@inherits SectionFormBase<WarehouseCreateDto>

<SectionForm
  FormModel="@FormModel"
  Validator="@(new WarehouseCreateValidator(WsDataLocalizer))"
  OnCancelAction="@OnCancelAction"
  OnSubmitAction="@CreateItem"
>
  <FieldsContent>
    <SectionGuidField
      Label="UID 1C"
      @bind-Value="@FormModel.Id1C"
      For="@(() => FormModel.Id1C)"
    />

    <SectionTextField
      @bind-Value="@FormModel.Name"
      Label="@WsDataLocalizer["ColName"]"
      For="@(() => FormModel.Name)"
    />

    <UseParameterlessEndpoint Endpoint="ReferencesEndpoints.ProductionSitesEndpoint" Context="productionSiteQuery">
      @if (productionSiteQuery.HasData)
      {
        <SectionReadOnlyField
          Label="@WsDataLocalizer["ColProductionSite"]"
          Value="@(productionSiteQuery.Data.FirstOrDefault(x => x.Id == FormModel.ProductionSiteId)?.Name ?? string.Empty)"
          For="@(() => FormModel.Id1C)"
        />
      }
    </UseParameterlessEndpoint>

  </FieldsContent>
</SectionForm>

@code {
  #region Inject

  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;
  [Inject] private IStringLocalizer<WsDataResources> WsDataLocalizer { get; set; } = default!;
  [Inject] private IState<ProductionSiteState> ProductionSiteState { get; set; } = default!;
  [Inject] private ReferencesEndpoints ReferencesEndpoints { get; set; } = default!;
  [Inject] private IWebApi WebApi { get; set; } = default!;

  #endregion

  protected override async Task CreateItemAction(WarehouseCreateDto item)
  {
    WarehouseDto dto = await WebApi.CreateWarehouse(item);
    ReferencesEndpoints.AddWarehouse(item.ProductionSiteId, dto);
  }
}
