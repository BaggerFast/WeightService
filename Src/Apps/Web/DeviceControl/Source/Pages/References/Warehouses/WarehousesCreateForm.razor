@using DeviceControl.Source.Shared.Services
@using Ws.DeviceControl.Models
@using Ws.DeviceControl.Models.Dto.References.Warehouses.Commands.Create

@inherits SectionFormBase<WarehouseCreateDto>

<SectionForm
  FormModel="@FormModel"
  Validator="@(new WarehouseCreateValidator(WsDataLocalizer))"
  OnCancelAction="@OnCancelAction"
  OnSubmitAction="@CreateItem"
>
  <FieldsContent>
    <SectionGuidField
      Label="UID 1C"
      @bind-Value="@FormModel.Id1C"
      For="@(() => FormModel.Id1C)"
    />

    <SectionTextField
      @bind-Value="@FormModel.Name"
      Label="@WsDataLocalizer["ColName"]"
      For="@(() => FormModel.Name)"
    />

    <SectionReadOnlyField
      Label="@WsDataLocalizer["ColProductionSite"]"
      Value="@ProductionSiteState.Value.ProductionSite.Name"
    />
  </FieldsContent>
</SectionForm>

@code {
  #region Inject

  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;
  [Inject] private IStringLocalizer<WsDataResources> WsDataLocalizer { get; set; } = default!;
  [Inject] private IState<ProductionSiteState> ProductionSiteState { get; set; } = default!;
  [Inject] private ReferencesEndpoints ReferencesEndpoints { get; set; } = default!;
  [Inject] private IWebApi WebApi { get; set; } = default!;

  #endregion

  protected override async Task CreateItemAction(WarehouseCreateDto item) =>
    ReferencesEndpoints.AddWarehouse(ProductionSiteState.Value.ProductionSite.Uid, await WebApi.CreateWarehouse(item));
}
