@using DeviceControl.Source.Widgets.Section.DataGridActions
@using Ws.Domain.Models.Entities.Ref
@using DeviceControl.Source.Widgets.Section
@inherits SectionDataGridPageBase<Ws.Domain.Models.Entities.Ref.Warehouse>
@attribute [Route($"{RouteUtils.SectionWarehouses}{RouteUtils.SectionQrlQuery}")]
@attribute [Authorize(Policy = PolicyEnum.Admin)]
@rendermode InteractiveServer

<PageTitle>DeviceControl - @Localizer["SectionWarehouses"]</PageTitle>

<PageHeader>
  <span>@Localizer["SectionLines"]</span>
  <DataGridItemsCounter ItemsCount="@SectionItems.Count()" IsLoading="IsLoading"/>
  <DataGridActionReload OnClick="@UpdateData" IsLoading="IsLoading" />
  <DataGridActionCreate OnClick="@OpenSectionCreateForm" />
  <div class="w-64">
    <SelectSingle
      TItem="ProductionSite"
      Items="ProductionSiteEntities"
      @bind-SelectedItem="ProductionSite"
      @bind-SelectedItem:after="@UpdateData"
      ItemDisplayName="item => item.Name"
      IsDisabled="@(!IsSeniorSupport)"
      IsFilterable
    />
  </div>
</PageHeader>


<DataGridWrapper>
  <DataGridContainer
    TItem="Warehouse"
    Items="SectionItems"
    OnItemSelect="@(item => OpenDataGridEntityModal(item))"
  >
    <ColumnsContent>
      <DataGridColumn
        Caption="@WsDataLocalizer["ColName"]"
        Field="@nameof(Warehouse.Name)"
        Width="50%"
      />
      <DataGridColumn
        Caption="@WsDataLocalizer["ColProductionSite"]"
        Field="ProductionSite.Name"
        Width="50%"
      />
    </ColumnsContent>
    <ContextMenuContent>
      <DataGridActionViewItem OnClick="@(() => ContextFuncWrapper(context.Item, context.CloseContextMenu, item => OpenDataGridEntityModal(item)))" />
      <DataGridActionOpenInNewTab OnClick="@(() => ContextFuncWrapper(context.Item, context.CloseContextMenu, item => OpenItemInNewTab(item)))" />
      <DataGridActionDeleteItem OnClick="@(() => ContextFuncWrapper(context.Item, context.CloseContextMenu, item => DeleteItem(item)))" />
    </ContextMenuContent>
  </DataGridContainer>
</DataGridWrapper>
