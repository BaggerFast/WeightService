@using DeviceControl.Source.Shared.Services
@using Ws.DeviceControl.Models.Dto.References.Warehouses.Commands.Update
@using Ws.DeviceControl.Models.Dto.References.Warehouses.Queries

@inherits SectionFormBase<WarehouseUpdateDto>

<SectionForm
  FormModel="@FormModel"
  ChangeDate="@Model.ChangeDt"
  CreateDate="@Model.CreateDt"
  Validator="@(new WarehouseUpdateValidator(WsDataLocalizer))"
  OnCancelAction="@OnCancelAction"
  OnSubmitAction="@UpdateItem"
>
  <FieldsContent>
    <SectionAdminGuidField Value="@Model.Id" />

    <SectionGuidField
      Label="UID 1C"
      @bind-Value="@FormModel.Id1C"
      For="@(() => FormModel.Id1C)"
    />

    <SectionTextField
      Label="@WsDataLocalizer["ColName"]"
      @bind-Value="@FormModel.Name"
      For="@(() => FormModel.Name)"
    />

    <SectionReadOnlyField
      Label="@WsDataLocalizer["ColProductionSite"]"
      Value="@ProductionSiteState.Value.ProductionSite.Name"
    />
  </FieldsContent>
  <ActionsContent>
    <SectionFormActionShare Path="@($"{RouteUtils.SectionWarehouses}?id={Model.Id}")" />
    <SectionFormActionReset OnClick="@ResetAction" />
    <SectionFormActionDelete OnClick="@DeleteItem" />
  </ActionsContent>
</SectionForm>

@code {
  #region Inject

  [Inject] private IStringLocalizer<WsDataResources> WsDataLocalizer { get; set; } = default!;
  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;
  [Inject] private IState<ProductionSiteState> ProductionSiteState { get; set; } = default!;

  #endregion

  [Parameter, EditorRequired] public WarehouseDto Model { get; set; } = default!;

  protected override Task UpdateItemAction(WarehouseUpdateDto item) =>
    throw new NotImplementedException();

  protected override Task DeleteItemAction(WarehouseUpdateDto item) =>
    throw new NotImplementedException();
}