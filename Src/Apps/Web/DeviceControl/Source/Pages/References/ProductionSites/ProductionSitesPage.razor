@using DeviceControl.Source.Shared.Services
@using Ws.DeviceControl.Models
@using Ws.DeviceControl.Models.Dto.References.ProductionSites.Queries
@inherits SectionPageBase<ProductionSiteDto>
@attribute [Route(RouteUtils.SectionProductionSites)]
@attribute [Authorize(Policy = PolicyEnum.Admin)]
@rendermode InteractiveServer

<PageTitle>DeviceControl - @Localizer["SectionProductionSites"]</PageTitle>

<UseParameterlessEndpoint Endpoint="@ReferencesEndpoints.ProductionSitesEndpoint" Options="@(DefaultEndpointOptions)" Context="sitesQuery">
  <PageHeader>
    <span>@Localizer["SectionProductionSites"]</span>
    <DataGridItemsCounter ItemsCount="@(sitesQuery.Data?.Length ?? 0)" IsLoading="sitesQuery.IsLoading"/>
    <DataGridActionReload OnClick="@sitesQuery.RefetchAsync" IsLoading="sitesQuery.IsFetching" />
    <DataGridActionCreate OnClick="@OpenCreateFormModal" />
  </PageHeader>
  <DataGridWrapper>
    <DataGridContainer
      TItem="ProductionSiteDto"
      Items="@(sitesQuery.HasData ? sitesQuery.Data : [])"
      OnItemSelect="@(item => OpenUpdateFormModal(item))"
    >
      <ColumnsContent>
        <DataGridColumn
          Caption="@WsDataLocalizer["ColName"]"
          Field="@nameof(ProductionSiteDto.Name)"
          Width="20%"
        />
        <DataGridColumn
          Caption="@WsDataLocalizer["ColAddress"]"
          Field="@nameof(ProductionSiteDto.Address)"
          Width="80%"
        />
      </ColumnsContent>
      <ContextMenuContent>
        <DataGridActionViewItem OnClick="@(() => ContextFuncWrapper(context.Item, context.CloseContextMenu, item => OpenUpdateFormModal(item)))" />
        <DataGridActionOpenInNewTab OnClick="@(() => ContextFuncWrapper(context.Item, context.CloseContextMenu, item => OpenItemInNewTab(item)))" />
        <DataGridActionDeleteItem OnClick="@(() => ContextFuncWrapper(context.Item, context.CloseContextMenu, item => DeleteItem(item)))" />
      </ContextMenuContent>
    </DataGridContainer>
  </DataGridWrapper>
</UseParameterlessEndpoint>

@code {
  # region Inject

  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;
  [Inject] private IStringLocalizer<WsDataResources> WsDataLocalizer { get; set; } = default!;
  [Inject] private ReferencesEndpoints ReferencesEndpoints { get; set; } = default!;
  [Inject] private IWebApi WebApi { get; set; } = default!;

  # endregion

  protected override async Task OpenCreateFormModal() =>
    await OpenModal<ProductionSitesCreateDialog>();

  protected override async Task OpenUpdateFormModal(ProductionSiteDto item) =>
    await OpenModalWithItem<ProductionSitesUpdateDialog>(item);

  protected override async Task OpenItemInNewTab(ProductionSiteDto item) =>
    await OpenLinkInNewTab($"{RouteUtils.SectionProductionSites}?id={item.Id}");

  protected override Task<ProductionSiteDto> SearchByUidAction(Guid uid) =>
    WebApi.GetProductionSiteByUid(uid);

  protected override async Task DeleteItemAction(ProductionSiteDto item)
  {
    await WebApi.DeleteProductionSite(item.Id);
    ReferencesEndpoints.DeleteProductionSite(item.Id);
  }
}