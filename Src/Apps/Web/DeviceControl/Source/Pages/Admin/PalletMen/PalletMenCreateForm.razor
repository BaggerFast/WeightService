@using DeviceControl.Source.Shared.Services
@using Ws.DeviceControl.Models
@using Ws.DeviceControl.Models.Dto.Admins.PalletMen.Commands.Create
@using Ws.DeviceControl.Models.Dto.Admins.PalletMen.Queries
@using Ws.DeviceControl.Models.Dto.Shared

@inherits SectionFormBase<Ws.DeviceControl.Models.Dto.Admins.PalletMen.Commands.Create.PalletManCreateDto>

<SectionForm
  FormModel="@FormModel"
  Validator="@(new PalletManCreateValidator(WsDataLocalizer))"
  OnCancelAction="@OnCancelAction"
  OnSubmitAction="@CreateItem"
>
  <FieldsContent>
    <SectionGuidField
      Label="UID 1C"
      @bind-Value="@FormModel.Id1C"
      For="@(() => FormModel.Id1C)"
    />

    <UseEndpoint
      Endpoint="@ReferencesEndpoints.ProxyWarehousesEndpoint"
      Arg="ProductionSiteState.Value.ProductionSite.Uid"
      Context="warehousesQuery"
    >
      @if (warehousesQuery.HasData)
      {
      <SectionInputWrapper
        Path="@(FormModel.WarehouseId != Guid.Empty ? Redirector.ToWarehousePath(FormModel.WarehouseId, UserPrincipal) : string.Empty)"
        Label="@WsDataLocalizer["ColWarehouse"]"
      >
        <SelectSingle
          TItem="ProxyDto?"
          Items="warehousesQuery.Data"
          SelectedItem="@warehousesQuery.Data.SingleOrDefault(x => x.Id == FormModel.WarehouseId)"
          SelectedItemChanged="@(value => FormModel.WarehouseId = value?.Id ?? Guid.Empty)"
          Placeholder="@Localizer["FormWarehouseDefaultPlaceholder"]"
          EmptyPlaceholder="@Localizer["FormSelectEmptyDefaultPlaceholder"]"
          SearchPlaceholder="@Localizer["FormSelectSearchDefaultPlaceholder"]"
          ItemDisplayName="@(item => item!.Name)"
          IsFilterable
        />
        <FieldValidation For="@(() => FormModel.WarehouseId)" />
      </SectionInputWrapper>
      }
      else
      {
      <Skeleton class="h-10 w-full" />
      }
    </UseEndpoint>

    <FormDivider></FormDivider>

    <SectionTextField
      Label="@WsDataLocalizer["ColFirstName"]"
      @bind-Value="@FormModel.Name"
      For="@(() => FormModel.Name)"
    />

    <SectionTextField
      Label="@WsDataLocalizer["ColSurname"]"
      @bind-Value="@FormModel.Surname"
      For="@(() => FormModel.Surname)"
    />

    <SectionTextField
      Label="@WsDataLocalizer["ColPatronymic"]"
      @bind-Value="@FormModel.Patronymic"
      For="@(() => FormModel.Patronymic)"
    />

    <FormDivider></FormDivider>

    <SectionTextField
      Label="@WsDataLocalizer["ColPassword"]"
      @bind-Value="@FormModel.Password"
      For="@(() => FormModel.Password)"
    />
  </FieldsContent>
</SectionForm>

@code {
  #region Inject

  [Inject] private IStringLocalizer<WsDataResources> WsDataLocalizer { get; set; } = default!;
  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;
  [Inject] private Redirector Redirector { get; set; } = default!;
  [Inject] private ReferencesEndpoints ReferencesEndpoints { get; set; } = default!;
  [Inject] private PalletManEndpoints PalletManEndpoints { get; set; } = default!;
  [Inject] private IState<ProductionSiteState> ProductionSiteState { get; set; } = default!;
  [Inject] private IWebApi WebApi { get; set; } = default!;

  #endregion

  protected override async Task CreateItemAction(PalletManCreateDto item)
  {
    PalletManDto dto = await WebApi.CreatePalletMan(item);
    PalletManEndpoints.AddPalletMan(ProductionSiteState.Value.ProductionSite.Uid, dto);
  }
}
