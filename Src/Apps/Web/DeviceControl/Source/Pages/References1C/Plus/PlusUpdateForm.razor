@using DeviceControl.Source.Shared.Services
@using Ws.DeviceControl.Models
@using Ws.DeviceControl.Models.Dto.References1C.Plus.Commands.Update
@using Ws.DeviceControl.Models.Dto.References1C.Plus.Queries

@inherits SectionFormBase<Ws.DeviceControl.Models.Dto.References1C.Plus.Commands.Update.PluUpdateDto>

<SectionForm
  FormModel="@FormModel"
  ChangeDate="Model.ChangeDt"
  CreateDate="Model.CreateDt"
  Validator="@(new PluUpdateValidator(WsDataLocalizer))"
  OnCancelAction="@OnCancelAction"
  OnSubmitAction="@UpdateItem"
>
  <FieldsContent>
    <SectionAdminGuidField Value="@Model.Id" />

    <SectionReadOnlyField
      Label="@WsDataLocalizer["ColNumber"]"
      Value="@Model.Number"
    />

    <SectionReadOnlyField
      Label="@WsDataLocalizer["ColType"]"
      Value="@GetPluTypeName(Model.IsWeight)"
    />

    <SectionReadOnlyField
      Label="@($"{WsDataLocalizer["ColWeight"]} ({WsDataLocalizer["MeasureKg"]})")"
      Value="@Model.Weight"
    />

    <SectionReadOnlyField
      Label="@WsDataLocalizer["ColBrand"]"
      Value="@Model.Brand.Name"
      Path="@Redirector.ToBrandPath(Model.Brand.Id)"
    />

    <SectionReadOnlyField
      Label="@WsDataLocalizer["ColShelfLifeDays"]"
      Value="@Model.ShelfLifeDays"
    />

    @* <SectionSelectSingleField *@
    @*   TItem="Template?" *@
    @*   Label="@WsDataLocalizer["ColTemplate"]" *@
    @*   Items="@AllTemplates" *@
    @*   Value="@AllTemplates.SingleOrDefault(i => i.Uid == FormModel.TemplateId)" *@
    @*   ValueChanged="@(item => FormModel.TemplateId = item?.Uid ?? Guid.Empty)" *@
    @*   ItemDisplayName="@(item => item!.Name)" *@
    @*   Disabled="@(!IsForceSubmit)" *@
    @*   Path="@(FormModel.TemplateId != Guid.Empty ? Redirector.ToTemplatePath(FormModel.TemplateId, UserPrincipal) : string.Empty)" *@
    @* /> *@

    <SectionReadOnlyField
      Label="@WsDataLocalizer["ColStorageMethod"]"
      Value="@Model.StorageMethod"
    />

    <FormDivider>@WsDataLocalizer["ColDescription"]</FormDivider>

    <SectionTextField
      Label="@WsDataLocalizer["ColName"]"
      @bind-Value="@FormModel.Name"
      For="@(() => FormModel.Name)"
      Disabled="@(!IsForceSubmit)"
    />

    <SectionTextAreaField
      Label="@WsDataLocalizer["ColFullName"]"
      @bind-Value="@FormModel.FullName"
      For="@(() => FormModel.FullName)"
      Disabled="@(!IsForceSubmit)"
    />

    <SectionTextAreaField
      Label="@WsDataLocalizer["ColDescription"]"
      @bind-Value="@FormModel.Description"
      For="@(() => FormModel.Description)"
      Disabled="@(!IsForceSubmit)"
    />

    <FormDivider>@Localizer["FieldPackaging"]</FormDivider>

    @if (Model.Bundle != null)
    {
      <SectionReadOnlyField
        Label="@WsDataLocalizer["ColBundle"]"
        Value="@Model.Bundle.Name"
        Path="@Redirector.ToBundlePath(Model.Bundle.Id)"
      />
    }

    @if (Model.Clip != null)
    {
      <SectionReadOnlyField
        Label="@WsDataLocalizer["ColClip"]"
        Value="@Model.Clip.Name"
        Path="@Redirector.ToClipPath(Model.Clip.Id)"
      />
    }

    <FormDivider>@WsDataLocalizer["ColBarcode"]</FormDivider>

    <SectionReadOnlyField
      Label="Ean13"
      Value="@Model.Ean13"
    />

    <SectionReadOnlyField
      Label="Gtin"
      Value="@Model.Gtin"
    />

  </FieldsContent>

  <ActionsContent>
    <SectionFormActionShare Path="@($"{RouteUtils.SectionPlus}?id={Model.Id}")" />
    <SectionFormActionUnlock @bind-IsUnlocked="@IsForceSubmit" />
    @if (IsForceSubmit)
    {
      <SectionFormActionReset OnClick="@ResetAction" />
    }
  </ActionsContent>
</SectionForm>

@code {
  # region Injects

  [Inject] private Redirector Redirector { get; set; } = default!;
  [Inject] private IStringLocalizer<WsDataResources> WsDataLocalizer { get; set; } = default!;
  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;
  [Inject] private References1CEndpoints References1CEndpoints { get; set; } = default!;
  [Inject] private IWebApi WebApi { get; set; } = default!;

  # endregion

  [Parameter, EditorRequired] public PluDto Model { get; set; } = default!;

  private bool IsForceSubmit { get; set; }

  protected override async Task UpdateItemAction(PluUpdateDto item)
  {
    PluDto dto = await WebApi.UpdatePlu(Model.Id, item);
    References1CEndpoints.UpdatePlu(dto);
  }

  private string GetPluTypeName(bool isWeight) =>
    isWeight ? WsDataLocalizer["ColPluWeight"] : WsDataLocalizer["ColPluPiece"];
}
