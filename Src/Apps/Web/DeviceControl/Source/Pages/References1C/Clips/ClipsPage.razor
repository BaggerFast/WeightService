@using DeviceControl.Source.Shared.Services
@using Ws.DeviceControl.Models
@using Ws.DeviceControl.Models.Dto.Shared
@using Blazor.Heroicons.Outline

@inherits SectionPageBase<Ws.DeviceControl.Models.Dto.Shared.PackageDto>
@attribute [Route(RouteUtils.SectionClips)]
@rendermode InteractiveServer

<PageTitle>DeviceControl - @Localizer["SectionClips"]</PageTitle>

<UseParameterlessEndpoint Endpoint="@References1CEndpoints.ClipsEndpoint" Options="@(DefaultEndpointOptions)" Context="clipsQuery">
  <PageHeader>
    <span>@Localizer["SectionClips"]</span>
    <DataGridItemsCounter ItemsCount="@(clipsQuery.Data?.Length ?? 0)" IsLoading="clipsQuery.IsLoading"/>
    <DataGridActionReload OnClick="@clipsQuery.RefetchAsync" IsLoading="clipsQuery.IsFetching" />
  </PageHeader>
  <DataGridWrapper>
    <DataGridContainer
      TItem="PackageDto"
      Items="@(clipsQuery.HasData ? clipsQuery.Data : [])"
      OnItemSelect="@(item => OpenSectionViewModal(item))"
    >
      <ColumnsContent>
        <DataGridColumn
          Caption="@WsDataLocalizer["ColStatus"]"
          Width="5%"
          Filterable="false"
        >
          <DisplayTemplate>
            @if (context.Name.StartsWith('—è'))
            {
            <div class="w-full flex items-center justify-center">
              <TrashIcon class="text-red-600 size-5"/>
            </div>
            }
          </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn
          Caption="@WsDataLocalizer["ColChangeDt"]"
          Field="@nameof(PackageDto.ChangeDt)"
          Width="20%"/>
        <DataGridColumn
          Caption="@WsDataLocalizer["ColName"]"
          Field="@nameof(PackageDto.Name)"
          Width="55%"/>
        <DataGridColumn
          Caption="@WsDataLocalizer["ColWeight"]"
          Field="@nameof(PackageDto.Weight)"
          Width="20%"/>
      </ColumnsContent>
      <ContextMenuContent>
        <DataGridActionViewItem OnClick="@(() => ContextFuncWrapper(context.Item, context.CloseContextMenu, async item => await OpenSectionViewModal(item)))" />
        <DataGridActionOpenInNewTab OnClick="@(() => ContextFuncWrapper(context.Item, context.CloseContextMenu, async item => await OpenItemInNewTab(item)))" />
      </ContextMenuContent>
    </DataGridContainer>
  </DataGridWrapper>
</UseParameterlessEndpoint>

@code {
  #region Inject

  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;
  [Inject] private IStringLocalizer<WsDataResources> WsDataLocalizer { get; set; } = default!;
  [Inject] private References1CEndpoints References1CEndpoints { get; set; } = default!;
  [Inject] private IWebApi WebApi { get; set; } = default!;

  #endregion

  protected override async Task OpenSectionViewModal(PackageDto item)
    => await OpenSectionModal<ClipsUpdateDialog>(item);

  protected override async Task OpenItemInNewTab(PackageDto item)
    => await OpenLinkInNewTab($"{RouteUtils.SectionClips}?id={item.Id}");

  protected override Task<PackageDto> SearchByUidAction(Guid uid) =>
    WebApi.GetClipByUid(uid);
}