@using Blazor.Heroicons.Outline

@if (IsLoading)
{
  <Button OnClick="@ToggleCancel">
    @Localizer["BtnCancel"] (@SecToOpen @WsDataLocalizer["MeasureSec"])
  </Button>
}
else
{
  <Button
    OnClick="@OnClickAction"
    Variant="ButtonVariantType.Destructive"
    Class="@Css.Class("!w-full !justify-start", Class)"
    Disabled="Disabled"
  >
    <TrashIcon class="size-4 mr-2" />
    @Localizer["FormActionDelete"]
  </Button>
}


@code {
  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;
  [Inject] private IStringLocalizer<WsDataResources> WsDataLocalizer { get; set; } = default!;

  [Parameter] public string Class { get; set; } = string.Empty;
  [Parameter] public bool Disabled { get; set; }
  [Parameter] public EventCallback OnClick { get; set; }

  private bool IsLoading { get; set; } = false;
  private int SecToOpen { get; set; } = 0;
  private const int ButtonDebounceSeconds = 3;
  private bool IsCanceled { get; set; } = false;

  private async Task OnClickAction()
  {
    if (IsLoading || IsCanceled) return;
    IsLoading = true;
    SecToOpen = ButtonDebounceSeconds;
    StateHasChanged();

    while (SecToOpen > 0)
    {
      await Task.Delay(1000);
      if (IsCanceled)
      {
        IsCanceled = false;
        return;
      }
      SecToOpen--;
      StateHasChanged();
    }

    IsLoading = false;
    await OnClick.InvokeAsync();
  }

  private void ToggleCancel()
  {
    IsCanceled = true;
    IsLoading = false;
    StateHasChanged();
  }
}