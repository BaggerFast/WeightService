@using Pl.Admin.Client.Source.Shared.Api.Web.Endpoints
@using Pl.Admin.Client.Source.Shared.Api.Web.Models
@using Pl.Admin.Models
@using Pl.Admin.Models.Features.Admins.Users.Commands
@using Pl.Admin.Models.Features.References.ProductionSites.Queries
@inherits SectionFormBase<UserUpdateDto>

<SectionForm
  FormModel="@FormModel"
  Validator="@(new UserUpdateValidator(WsDataLocalizer))"
  OnCancelAction="@OnCancelAction"
  OnSubmitAction="@UpdateItem"
>
  <FieldsContent>
    <SectionAdminGuidField Value="@Model.Id" />

    <SectionAdminGuidField Value="@Model.KcId" Label="UID KC" />

    <SectionReadOnlyField
      Label="@WsDataLocalizer["ColFIO"]"
      Value="@Model.Fio.DisplayFullName"
    />

    <SectionInputWrapper
      Path="@RedirectHelper.ToProductionSite(Model.ProductionSiteId)"
      Label="@WsDataLocalizer["ColProductionSite"]"
      HtmlFor="user-warehouse"
    >
      <UseParameterlessEndpoint
        Endpoint="@ReferencesEndpoints.ProductionSitesEndpoint"
        Context="productionSitesQuery"
      >
        @if (productionSitesQuery.HasData)
        {
          <SelectSingle
            TItem="ProductionSiteDto"
            HtmlId="user-warehouse"
            Items="productionSitesQuery.Data"
            Value="@productionSitesQuery.Data.FirstOrDefault(x => x.Id == FormModel.ProductionSiteId)"
            ValueChanged="@(value => FormModel.ProductionSiteId = value?.Id ?? Guid.Empty)"
            Placeholder="@Localizer["FormProductionSiteDefaultPlaceholder"]"
            EmptyPlaceholder="@Localizer["FormSelectEmptyDefaultPlaceholder"]"
            SearchPlaceholder="@Localizer["FormSelectSearchDefaultPlaceholder"]"
            ItemDisplayName="@(item => item.Name)"
            Filterable
          />
        }
        else
        {
          <Skeleton class="h-10 w-full" />
        }
      </UseParameterlessEndpoint>
      <FieldValidation For="@(() => FormModel.ProductionSiteId)" />
    </SectionInputWrapper>
  </FieldsContent>
  <ActionsContent>
    <SectionFormActionReset OnClick="@ResetAction" />
    <SectionFormActionRelogin UserUid="Model.Id" />
  </ActionsContent>
</SectionForm>

@code {
  #region Inject

  [Inject] private RedirectHelper RedirectHelper { get; set; } = default!;
  [Inject] private IStringLocalizer<WsDataResources> WsDataLocalizer { get; set; } = default!;
  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;
  [Inject] private ReferencesEndpoints ReferencesEndpoints { get; set; } = default!;
  [Inject] private AdminEndpoints AdminEndpoints { get; set; } = default!;
  [Inject] private IWebApi WebApi { get; set; } = default!;

  #endregion

  [Parameter, EditorRequired] public UserModel Model { get; set; } = default!;

  protected override async Task UpdateItemAction(UserUpdateDto item)
  {
    await WebApi.SaveOrUpdateUser(Model.Id, item);
    AdminEndpoints.UpdateUser(Model, item.ProductionSiteId);
  }
}
