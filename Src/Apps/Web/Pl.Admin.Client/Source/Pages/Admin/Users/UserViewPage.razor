@using Pl.Admin.Client.Source.Shared.Api.Web.Endpoints
@using Pl.Admin.Client.Source.Shared.Api.Web.Models
@using Pl.Admin.Client.Source.Shared.Constants
@using Pl.Admin.Models

@attribute [Route(Urls.Users + "/{Id:guid}")]

<UseParameterlessEndpoint
  Endpoint="@AdminEndpoints.UsersEndpoint"
  Context="query"
>
  @{ UserModel? user = query.Data?.FirstOrDefault(x => x.KcId == Id); }

  <Breadcrumbs Start="BreadcrumbStart.Back">
    <Breadcrumb Label="@Localizer["SectionUsers"]" Link="@Urls.Users" />
    @if (user != null)
    {
      <Breadcrumb Label="@user.Fio.DisplayShortName" />
    }
  </Breadcrumbs>

  <ViewHeader Title="@user?.Fio.DisplayShortName">
    <ButtonsContent>
      @if (user != null)
      {
        <ViewButtonShare Link="@RedirectHelper.ToAbsoluteUrl(RedirectHelper.ToUser(user.KcId))" />
        <ViewButtonUpdate TDialog="UsersUpdateDialog" Model="@user" />
        <ViewButtonDelete Action="@EventCallback.Factory.Create(this, () => DeleteItem(user))" />
      }
    </ButtonsContent>

    <TabsContent>
      <ViewTabButton Value="info" @bind-CurrentTab="CurrentTab">
        Информация
      </ViewTabButton>
    </TabsContent>
  </ViewHeader>

  <Tabs @bind-ActiveTabId="@CurrentTab">
    @if (user != null)
    {
      <Tab Id="info">
        <UserViewInfo Model="@user"/>
      </Tab>
    }
  </Tabs>
</UseParameterlessEndpoint>

@code {
  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;
  [Inject] private PageHelper PageHelper { get; set; } = default!;
  [Inject] private AdminEndpoints AdminEndpoints { get; set; } = default!;
  [Inject] private RedirectHelper RedirectHelper { get; set; } = default!;
  [Inject] private IWebApi WebApi { get; set; } = default!;
  [Parameter] public Guid Id { get; set; }

  private string CurrentTab { get; set; } = "info";

  private async Task DeleteItem(UserModel item)
  {
    await WebApi.DeleteUser(item.Id);
    AdminEndpoints.DeleteUser(item.Id);
    await PageHelper.OpenLink(Urls.Users);
  }
}
