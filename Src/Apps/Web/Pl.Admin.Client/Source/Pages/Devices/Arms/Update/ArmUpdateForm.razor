@using Pl.Admin.Client.Source.Shared.Api.Web.Endpoints
@using Pl.Admin.Models
@using Pl.Admin.Models.Features.Devices.Arms.Commands
@using Pl.Admin.Models.Features.Devices.Arms.Queries

@inherits SectionFormBase<ArmUpdateDto>

<UseParameterlessEndpoint
  Endpoint="ReferencesEndpoints.ProxyUserProductionSiteEndpoint"
  Context="userProductionSiteQuery"
>
  <SectionForm
    FormModel="@FormModel"
    ChangeDate="@Model.ChangeDt"
    CreateDate="@Model.CreateDt"
    Validator="@ArmUpdateValidator"
    OnCancelAction="@OnCancelAction"
    OnSubmitAction="@UpdateItem"
  >
    <FieldsContent>
      <SectionAdminGuidField Value="@Model.Id" />

      <SectionReadOnlyField
        Label="@WsDataLocalizer["ColVersion"]"
        Value="@Model.Version"
      />

      <SectionNumericField
        Label="@WsDataLocalizer["ColNumber"]"
        @bind-Value="@FormModel.Number"
        Min="10000"
        Max="99999"
        For="@(() => FormModel.Number)"
      />

      <SectionTextField
        Label="@WsDataLocalizer["ColName"]"
        @bind-Value="@FormModel.Name"
        For="@(() => FormModel.Name)"
        MaxLength="32"
      />

      <SectionNumericField
        Label="@WsDataLocalizer["ColCounter"]"
        @bind-Value="@(FormModel.Counter)"
        Min="0"
        For="@(() => FormModel.Counter)"
      />

      <SectionSelectSingleField
        TItem="ArmType"
        Label="@WsDataLocalizer["ColType"]"
        Items="ArmTypes"
        @bind-Value="@FormModel.Type"
        ItemDisplayName="item => Localizer[item.GetDescription()]"
        For="@(() => FormModel.Type)"
      />

      <FormDivider>@WsDataLocalizer["ColDevice"]</FormDivider>

      <SectionGuidField
        Label="@WsDataLocalizer["ColSystemKey"]"
        @bind-Value="@FormModel.SystemKey"
        For="@(() => FormModel.SystemKey)"
      />

      <SectionInputWrapper
        Path="@RedirectHelper.ToPrinter(FormModel.PrinterId)"
        Label="@WsDataLocalizer["ColPrinter"]"
        HtmlFor="arms-printer"
      >
        <UseEndpoint
          Endpoint="@DevicesEndpoints.ProxyPrintersEndpoint"
          Arg="@Model.ProductionSite.Id"
          Context="printersQuery"
        >
          @if (printersQuery.HasData)
          {
            <SelectSingle
              TItem="ProxyDto"
              HtmlId="arms-printer"
              Items="printersQuery.Data"
              Value="@printersQuery.Data.SingleOrDefault(x => x.Id == FormModel.PrinterId)"
              ValueChanged="@(value => FormModel.PrinterId = value?.Id ?? Guid.Empty)"
              Placeholder="@Localizer["FormPrinterDefaultPlaceholder"]"
              EmptyPlaceholder="@Localizer["FormSelectEmptyDefaultPlaceholder"]"
              SearchPlaceholder="@Localizer["FormSelectSearchDefaultPlaceholder"]"
              ItemDisplayName="@(item => item.Name)"
              Filterable
            />
          }
          else
          {
            <Skeleton class="h-9 w-full" />
          }
        </UseEndpoint>
        <FieldValidation For="@(() => FormModel.PrinterId)" />
      </SectionInputWrapper>

      <FormDivider>@Localizer["FieldLocation"]</FormDivider>

      <SectionReadOnlyField
        Label="@WsDataLocalizer["ColProductionSite"]"
        Value="@Model.ProductionSite.Name"
        Path="@RedirectHelper.ToProductionSite(Model.ProductionSite.Id)"
      />

      <SectionInputWrapper
        Path="@RedirectHelper.ToWarehouse(FormModel.WarehouseId)"
        Label="@WsDataLocalizer["ColWarehouse"]"
        HtmlFor="arm-warehouse"
      >
        <UseEndpoint
          Endpoint="@ReferencesEndpoints.ProxyWarehousesEndpoint"
          Arg="@Model.ProductionSite.Id"
          Context="warehousesQuery"
        >
          @if (warehousesQuery.HasData)
          {
            <SelectSingle
              TItem="ProxyDto"
              HtmlId="arm-warehouse"
              Items="warehousesQuery.Data"
              Value="@warehousesQuery.Data.SingleOrDefault(x => x.Id == FormModel.WarehouseId)"
              ValueChanged="@(value => FormModel.WarehouseId = value?.Id ?? Guid.Empty)"
              Placeholder="@Localizer["FormWarehouseDefaultPlaceholder"]"
              EmptyPlaceholder="@Localizer["FormSelectEmptyDefaultPlaceholder"]"
              SearchPlaceholder="@Localizer["FormSelectSearchDefaultPlaceholder"]"
              ItemDisplayName="@(item => item.Name)"
              Filterable
            />
          }
          else
          {
            <Skeleton class="h-9 w-full" />
          }
        </UseEndpoint>
        <FieldValidation For="@(() => FormModel.WarehouseId)" />
      </SectionInputWrapper>
    </FieldsContent>
    <ActionsContent>
      <SectionFormActionReset OnClick="@ResetAction" />
    </ActionsContent>
  </SectionForm>
</UseParameterlessEndpoint>

@code {
  # region Injects

  [Inject] private IWebApi WebApi { get; set; } = default!;
  [Inject] private IStringLocalizer<WsDataResources> WsDataLocalizer { get; set; } = default!;
  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;

  [Inject] private RedirectHelper RedirectHelper { get; set; } = default!;
  [Inject] private DevicesEndpoints DevicesEndpoints { get; set; } = default!;
  [Inject] private ReferencesEndpoints ReferencesEndpoints { get; set; } = default!;
  [Inject] private ArmUpdateValidator ArmUpdateValidator { get; set; } = default!;

  # endregion

  [Parameter, EditorRequired] public ArmDto Model { get; set; } = default!;

  private IEnumerable<ArmType> ArmTypes { get; } = Enum.GetValues(typeof(ArmType)).Cast<ArmType>().ToList();

  protected override async Task UpdateItemAction(ArmUpdateDto item)
  {
    ArmDto dto = await WebApi.UpdateArm(Model.Id, item);
    DevicesEndpoints.UpdateArm(Model.ProductionSite.Id, dto);
  }
}
