@using Pl.Admin.Client.Source.Shared.Api.Web.Endpoints
@using Pl.Admin.Client.Source.Shared.Constants
@using Pl.Admin.Models.Features.Devices.Printers.Queries
@using Pl.Admin.Models
@using Blazor.Heroicons.Outline

@attribute [Route(Urls.Printers + "/{Id:guid}")]

<UseEndpoint
  Endpoint="@DevicesEndpoints.PrinterEndpoint"
  Arg="@Id"
  Context="printerQuery"
>
  <Breadcrumbs>
    <Breadcrumb Label="Принтеры" Link="@Urls.Printers" />
    @if (printerQuery.HasData)
    {
      <Breadcrumb Label="@printerQuery.Data.Name" />
    }
  </Breadcrumbs>

  <ViewHeader Title="@printerQuery.Data?.Name">
    <ButtonsContent>
      @if (printerQuery.HasData)
      {
        <ViewButtonShare Link="@RedirectHelper.ToAbsoluteUrl(RedirectHelper.ToPrinter(printerQuery.Data.Id))" />
        <ViewButtonUpdate TDialog="PrinterUpdateDialog" Model="printerQuery.Data" />
        <ViewButtonDelete Action="@EventCallback.Factory.Create(this, () => DeleteItem(printerQuery.Data))" />
      }
    </ButtonsContent>

    <TabsContent>
      <ViewTabButton Value="info" @bind-CurrentTab="CurrentTab">
        Информация
      </ViewTabButton>
      <ViewTabButton Value="control" @bind-CurrentTab="CurrentTab">
        Управление
      </ViewTabButton>
    </TabsContent>
  </ViewHeader>

  <Tabs @bind-ActiveTabId="@CurrentTab">
    @if (printerQuery.HasData)
    {
      <Tab Id="info">
        <PrinterViewInfo Model="@printerQuery.Data"/>
      </Tab>
      <Tab Id="control">
        <PrinterViewControl Model="@printerQuery.Data" />
      </Tab>
    }
  </Tabs>
</UseEndpoint>

@code {
  [Inject] private PageHelper PageHelper { get; set; } = default!;
  [Inject] private DevicesEndpoints DevicesEndpoints { get; set; } = default!;
  [Inject] private RedirectHelper RedirectHelper { get; set; } = default!;
  [Inject] private IWebApi WebApi { get; set; } = default!;
  [Parameter] public Guid Id { get; set; }

  private string CurrentTab { get; set; } = "info";

  private async Task DeleteItem(PrinterDto item)
  {
    await WebApi.DeletePrinter(item.Id);
    DevicesEndpoints.DeletePrinter(item.ProductionSite.Id, item.Id);
    await PageHelper.OpenLink(Urls.Printers);
  }
}