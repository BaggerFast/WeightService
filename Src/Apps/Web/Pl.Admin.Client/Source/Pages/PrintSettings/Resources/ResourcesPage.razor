@using Pl.Admin.Client.Source.Shared.Api.Web.Endpoints
@using Pl.Admin.Client.Source.Shared.Constants
@using Pl.Admin.Models
@using Pl.Admin.Models.Features.References.TemplateResources.Queries

@attribute [Route(Urls.Resources)]
@attribute [Authorize(Policy = PolicyEnum.SeniorSupport)]
@rendermode InteractiveServer

<PageTitle>Admin - @Localizer["SectionResources"]</PageTitle>

<UseParameterlessEndpoint
  Endpoint="PrintSettingsEndpoints.ResourcesEndpoint"
  Options="PageHelper.DefaultEndpointOptions"
  Context="resourcesQuery"
>
  <DataGridHeader>
    <DataGridLabelWithCounter Label="@Localizer["SectionTemplateResources"]" ItemsCount="@resourcesQuery.Data?.Length" IsLoading="resourcesQuery.IsLoading"/>
    <DataGridActionReload OnClick="@resourcesQuery.RefetchAsync" IsLoading="resourcesQuery.IsFetching" />
    <AuthorizeView Policy="@PolicyEnum.Admin">
      <DataGridActionCreate OnClick="@OpenCreateDialog"/>
    </AuthorizeView>
  </DataGridHeader>

  <DataGridContainer
    TItem="TemplateResourceDto"
    Items="@(resourcesQuery.HasData ? resourcesQuery.Data : [])"
    OnItemSelect="@(item => OpenUpdateDialog(item))"
    IsFilterable
  >
    <ColumnsContent>
      <DataGridColumn
        Caption="@WsDataLocalizer["ColChangeDt"]"
        Field="@nameof(TemplateResourceDto.ChangeDt)"
        Width="20%"
        Filterable="false"
      />

      <DataGridColumn
        Caption="@WsDataLocalizer["ColType"]"
        Field="@nameof(TemplateResourceDto.Type)"
        Width="20%"
        Sortable="false"
        FilterCellClass="!font-normal"
      >
        <FilterTemplate>
          @{ context.SearchValue = Type; }
          <SelectSingle
            TItem="ZplResourceType?"
            Items="@(Enum.GetValues(typeof(ZplResourceType)).Cast<ZplResourceType?>().ToList().Union([null]))"
            @bind-Value="@Type"
            @bind-Value:after="@(() => context.TriggerFilterChange(Type))"
            Placeholder="@Localizer["SelectItemNotSelected"]"
            ItemDisplayName="@(item => item == null ? Localizer["SelectItemNotSelected"] : Localizer[item.Value.GetDescription()])"
          />
        </FilterTemplate>
        <DisplayTemplate>
          @Localizer[context.Type.GetDescription()]
        </DisplayTemplate>
      </DataGridColumn>

      <DataGridColumn
        Caption="@WsDataLocalizer["ColName"]"
        Field="@nameof(TemplateResourceDto.Name)"
        Width="60%"
      />
    </ColumnsContent>
    <ContextMenuContent>
      <DataGridActionUpdateItem TItem="TemplateResourceDto" Action="@OpenUpdateDialog" />
      <AuthorizeView Policy="@PolicyEnum.Admin" Context="authContext">
        <DataGridActionDeleteItem TItem="TemplateResourceDto" Action="@DeleteItem" />
      </AuthorizeView>
    </ContextMenuContent>
  </DataGridContainer>
</UseParameterlessEndpoint>

@code {

  #region Inject

  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;
  [Inject] private IStringLocalizer<WsDataResources> WsDataLocalizer { get; set; } = default!;
  [Inject] private PrintSettingsEndpoints PrintSettingsEndpoints { get; set; } = default!;
  [Inject] private IWebApi WebApi { get; set; } = default!;
  [Inject] private PageHelper PageHelper { get; set; } = default!;
  [Inject] private IDialogService DialogService { get; set; } = default!;

  #endregion

  private ZplResourceType? Type { get; set; }

  private Task OpenCreateDialog() =>
    DialogService.ShowDialogAsync<ResourcesCreateDialog>(PageHelper.DialogParameters);

  private Task OpenUpdateDialog(TemplateResourceDto item) =>
    DialogService.ShowDialogAsync<ResourcesUpdateDialog>(item, PageHelper.DialogParameters);

  private async Task DeleteItem(TemplateResourceDto item)
  {
    await WebApi.DeleteResource(item.Id);
    PrintSettingsEndpoints.DeleteResource(item.Id);
  }
}
