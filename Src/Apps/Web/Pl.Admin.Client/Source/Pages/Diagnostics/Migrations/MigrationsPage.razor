@using Pl.Admin.Client.Source.Shared.Api.Web.Endpoints
@using Pl.Admin.Client.Source.Shared.Constants
@using Pl.Admin.Models.Features.Database

@attribute [Route($"{Urls.Migrations}")]
@attribute [Authorize(Policy = PolicyEnum.Developer)]
@rendermode InteractiveServer

<PageTitle>Admin - @Localizer["SectionMigrations"]</PageTitle>

<UseParameterlessEndpoint
  Endpoint="@DiagnosticEndpoints.MigrationsEndpoint"
  Context="query"
>
  <Breadcrumbs Class="!pb-5">
    <Breadcrumb Label="@Localizer["SectionMigrations"]" Link="@Urls.Migrations" />
  </Breadcrumbs>

  <DataGridHeader>
    <DataGridLabelWithCounter
      Label="@Localizer["SectionMigrations"]"
      ItemsCount="@query.Data?.Length"
      IsLoading="query.IsLoading"
    />
    <DataGridActionReload OnClick="@query.RefetchAsync" IsLoading="query.IsFetching"/>
  </DataGridHeader>

  <DataGridContainer
    TItem="MigrationHistoryDto"
    Items="@(query.HasData ? query.Data : [])"
  >
    <ColumnsContent>
      <DataGridColumn
        Caption="@WsDataLocalizer["ColVersion"]"
        Field="@nameof(MigrationHistoryDto.ProductVersion)"
        Width="10%"
      />
      <DataGridColumn
        Caption="@WsDataLocalizer["ColName"]"
        Field="@nameof(MigrationHistoryDto.MigrationId)"
        Width="90%"
      />
    </ColumnsContent>
  </DataGridContainer>
</UseParameterlessEndpoint>

@code {
  # region Injects

  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;
  [Inject] private IStringLocalizer<WsDataResources> WsDataLocalizer { get; set; } = default!;
  [Inject] private DiagnosticEndpoints DiagnosticEndpoints { get; set; } = default!;

  # endregion
}
