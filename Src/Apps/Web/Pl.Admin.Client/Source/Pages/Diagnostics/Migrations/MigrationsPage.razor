@using Pl.Admin.Client.Source.Shared.Api.Web.Endpoints
@using Pl.Admin.Client.Source.Shared.Constants
@using Pl.Admin.Models.Features.Database
@attribute [Route($"{Urls.Migrations}")]
@attribute [Authorize(Policy = PolicyEnum.Admin)]
@rendermode InteractiveServer

<UseParameterlessEndpoint Endpoint="@DiagnosticEndpoints.MigrationsEndpoint" Context="migrationsQuery">
  <DataGridHeader>
    <DataGridLabelWithCounter Label="@Localizer["SectionMigrations"]" ItemsCount="@migrationsQuery.Data?.Length" IsLoading="migrationsQuery.IsLoading"/>
    <DataGridActionReload OnClick="@migrationsQuery.RefetchAsync" IsLoading="migrationsQuery.IsFetching"/>
  </DataGridHeader>

  <DataGridContainer
    TItem="MigrationHistoryDto"
    Items="@(migrationsQuery.HasData ? migrationsQuery.Data : [])"
  >
    <ColumnsContent>
      <DataGridColumn
        Caption="@WsDataLocalizer["ColVersion"]"
        Field="@nameof(MigrationHistoryDto.ProductVersion)"
        Width="10%"
      />
      <DataGridColumn
        Caption="@WsDataLocalizer["ColName"]"
        Field="@nameof(MigrationHistoryDto.MigrationId)"
        Width="90%"
      />
    </ColumnsContent>
  </DataGridContainer>
</UseParameterlessEndpoint>

@code {
  # region Injects

  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;
  [Inject] private IStringLocalizer<WsDataResources> WsDataLocalizer { get; set; } = default!;
  [Inject] private DiagnosticEndpoints DiagnosticEndpoints { get; set; } = default!;

  # endregion
}
