@using Blazor.Heroicons.Outline
@using Pl.Admin.Client.Source.Shared.Api.Web.Endpoints
@using Pl.Admin.Client.Source.Shared.Constants
@using Pl.Admin.Models.Features.References1C.Brands

@attribute [Route(Urls.Brands)]
@rendermode InteractiveServer

<PageTitle>Admin - @Localizer["SectionBrands"]</PageTitle>

<UseParameterlessEndpoint
  Endpoint="@References1CEndpoints.BrandsEndpoint"
  Options="@(PageHelper.DefaultEndpointOptions)"
  Context="brandsQuery"
>
  <DataGridHeader>
    <DataGridLabelWithCounter Label="@Localizer["SectionBrands"]" ItemsCount="@brandsQuery.Data?.Length" IsLoading="brandsQuery.IsLoading"/>
    <DataGridActionReload OnClick="@brandsQuery.RefetchAsync" IsLoading="brandsQuery.IsFetching" />
  </DataGridHeader>

  <DataGridContainer
    TItem="BrandDto"
    Items="@(brandsQuery.HasData ? brandsQuery.Data : [])"
    OnItemSelect="@(item => OpenUpdateDialog(item))"
  >
    <ColumnsContent>
      <DataGridColumn
        Caption="@WsDataLocalizer["ColStatus"]"
        Width="5%"
        Filterable="false"
      >
        <DisplayTemplate>
          @if (context.Name.StartsWith('—è'))
          {
            <div class="w-full flex items-center justify-center">
              <TrashIcon class="text-red-600 size-5"/>
            </div>
          }
        </DisplayTemplate>
      </DataGridColumn>

      <DataGridColumn
        Caption="@WsDataLocalizer["ColChangeDt"]"
        Field="@nameof(BrandDto.ChangeDt)"
        Width="20%"
      />

      <DataGridColumn
        Caption="@WsDataLocalizer["ColName"]"
        Field="@nameof(BrandDto.Name)"
        Width="55%"
      />
    </ColumnsContent>
    <ContextMenuContent>
      <DataGridActionUpdateItem TItem="BrandDto" Action="@OpenUpdateDialog" />
    </ContextMenuContent>
  </DataGridContainer>
</UseParameterlessEndpoint>

@code {
  #region Inject

  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;
  [Inject] private IStringLocalizer<WsDataResources> WsDataLocalizer { get; set; } = default!;
  [Inject] private References1CEndpoints References1CEndpoints { get; set; } = default!;
  [Inject] private PageHelper PageHelper { get; set; } = default!;
  [Inject] private IDialogService DialogService { get; set; } = default!;

  #endregion

  private Task OpenUpdateDialog(BrandDto item) =>
    DialogService.ShowDialogAsync<BrandsViewDialog>(item, PageHelper.DialogParameters);
}
