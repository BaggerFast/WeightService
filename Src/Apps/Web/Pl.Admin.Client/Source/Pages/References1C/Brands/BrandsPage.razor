@using Blazor.Heroicons.Outline
@using Pl.Admin.Client.Source.Shared.Api.Web.Endpoints
@using Pl.Admin.Client.Source.Shared.Constants
@using Pl.Admin.Models
@using Pl.Admin.Models.Features.References1C.Brands
@inherits SectionDataGridBase<BrandDto>
@attribute [Route(Urls.Brands)]
@rendermode InteractiveServer

<PageTitle>Pl.Admin.Client - @Localizer["SectionBrands"]</PageTitle>

<UseParameterlessEndpoint Endpoint="@References1CEndpoints.BrandsEndpoint" Options="@(DefaultEndpointOptions)" Context="brandsQuery">
  <DataGridHeader>
    <span>@Localizer["SectionBrands"]</span>
    <DataGridItemsCounter ItemsCount="@(brandsQuery.Data?.Length ?? 0)" IsLoading="brandsQuery.IsLoading"/>
    <DataGridActionReload OnClick="@brandsQuery.RefetchAsync" IsLoading="brandsQuery.IsFetching" />
  </DataGridHeader>
  <DataGridWrapper>
    <DataGridContainer
      TItem="BrandDto"
      Items="@(brandsQuery.HasData ? brandsQuery.Data : [])"
      OnItemSelect="@(item => OpenUpdateFormModal(item))"
    >
      <ColumnsContent>
        <DataGridColumn
          Caption="@WsDataLocalizer["ColStatus"]"
          Width="5%"
          Filterable="false"
        >
          <DisplayTemplate>
            @if (context.Name.StartsWith('—è'))
            {
            <div class="w-full flex items-center justify-center">
              <TrashIcon class="text-red-600 size-5"/>
            </div>
            }
          </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn
          Caption="@WsDataLocalizer["ColChangeDt"]"
          Field="@nameof(BrandDto.ChangeDt)"
          Width="20%"/>
        <DataGridColumn
          Caption="@WsDataLocalizer["ColName"]"
          Field="@nameof(BrandDto.Name)"
          Width="55%"/>
      </ColumnsContent>
      <ContextMenuContent>
        <DataGridActionViewItem OnClick="@(() => ContextFuncWrapper(context.Item, context.CloseContextMenu, async item => await OpenUpdateFormModal(item)))"/>
        <DataGridActionOpenInNewTab OnClick="@(() => ContextFuncWrapper(context.Item, context.CloseContextMenu, async item => await OpenItemInNewTab(item)))"/>
      </ContextMenuContent>
    </DataGridContainer>
  </DataGridWrapper>
</UseParameterlessEndpoint>

@code {
  #region Inject

  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;
  [Inject] private IStringLocalizer<WsDataResources> WsDataLocalizer { get; set; } = default!;
  [Inject] private References1CEndpoints References1CEndpoints { get; set; } = default!;
  [Inject] private IWebApi WebApi { get; set; } = default!;

  #endregion

  protected override async Task OpenUpdateFormModal(BrandDto item) =>
    await OpenModalWithItem<BrandsViewDialog>(item);

  protected override async Task OpenItemInNewTab(BrandDto item)
    => await OpenLinkInNewTab($"{Urls.Brands}?id={item.Id}");

  protected override Task<BrandDto> SearchByUidAction(Guid uid) =>
    WebApi.GetBrandByUid(uid);
}
