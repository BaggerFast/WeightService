@using Pl.Admin.Client.Source.Features
@using Pl.Admin.Client.Source.Pages.References.Warehouses.Create
@using Pl.Admin.Client.Source.Pages.References.Warehouses.Update
@using Pl.Admin.Client.Source.Shared.Api.Web.Endpoints
@using Pl.Admin.Client.Source.Shared.Constants
@using Pl.Admin.Client.Source.Shared.Services.Stores
@using Pl.Admin.Models
@using Pl.Admin.Models.Features.References.Warehouses.Queries

@attribute [Route(Urls.Warehouses)]
@attribute [Authorize(Policy = PolicyEnum.Support)]
@rendermode InteractiveServer

<BrowserTitle Label="@Localizer["SectionWarehouses"]" />

<UserProductionSiteErrorSuspense>
  <UseEndpoint
    Endpoint="@ReferencesEndpoints.WarehousesEndpoint"
    Arg="@ProductionSiteState.Value.ProductionSite.Id"
    Options="@(PageHelper.DefaultEndpointOptions)"
    Context="query"
  >
    <Breadcrumbs Class="pb-5">
      <Breadcrumb Label="@Localizer["SectionWarehouses"]" Link="@Urls.Warehouses" />
    </Breadcrumbs>

    <DataGridHeader>
      <DataGridLabelWithCounter
        Label="@Localizer["SectionWarehouses"]"
        ItemsCount="@query.Data?.Length"
        IsLoading="query.IsLoading"
      />
      <DataGridActionReload OnClick="@query.RefetchAsync" IsLoading="query.IsFetching" />
      <AuthorizeView Policy="@PolicyEnum.Admin">
        <DataGridActionCreate OnClick="@OpenCreateDialog" />
      </AuthorizeView>
    </DataGridHeader>

    <DataGridContainer
      TItem="WarehouseDto"
      Items="@(query.HasData ? query.Data : [])"
      OnItemSelect="@(item => PageHelper.OpenLink(RedirectHelper.ToWarehouse(item.Id)))"
    >
      <ColumnsContent>
        <DataGridColumn
          Caption="@WsDataLocalizer["ColName"]"
          Field="@nameof(WarehouseDto.Name)"
          Width="30%"
        />
      </ColumnsContent>
      <ContextMenuContent>
        <AuthorizeView Policy="@PolicyEnum.Admin" Context="authContext">
          <DataGridActionUpdateItem TItem="WarehouseDto" Action="@OpenUpdateDialog" />
        </AuthorizeView>
        <DataGridActionOpenItem Link="@(RedirectHelper.ToWarehouse(context.Item.Id))"/>
        <DataGridActionOpenInNewTab TItem="WarehouseDto" Link="@(RedirectHelper.ToWarehouse(context.Item.Id))"/>
        <AuthorizeView Policy="@PolicyEnum.Admin" Context="authContext">
          <DataGridActionDeleteItem TItem="WarehouseDto" Action="@DeleteItem"/>
        </AuthorizeView>
      </ContextMenuContent>
    </DataGridContainer>
  </UseEndpoint>
</UserProductionSiteErrorSuspense>

@code {
  #region Inject

  [Inject] private IWebApi WebApi { get; set; } = default!;
  [Inject] private IStringLocalizer<ApplicationResources> Localizer { get; set; } = default!;
  [Inject] private IStringLocalizer<WsDataResources> WsDataLocalizer { get; set; } = default!;
  [Inject] private IState<ProductionSiteState> ProductionSiteState { get; set; } = default!;
  [Inject] private IDialogService DialogService { get; set; } = default!;

  [Inject] private PageHelper PageHelper { get; set; } = default!;
  [Inject] private RedirectHelper RedirectHelper { get; set; } = default!;
  [Inject] private ReferencesEndpoints ReferencesEndpoints { get; set; } = default!;

  #endregion

  private Task OpenCreateDialog() =>
    DialogService.ShowDialogAsync<WarehouseCreateDialog>(PageHelper.DialogParameters);

  private Task OpenUpdateDialog(WarehouseDto item) =>
    DialogService.ShowDialogAsync<WarehouseUpdateDialog>(item, PageHelper.DialogParameters);

  private async Task DeleteItem(WarehouseDto item)
  {
    await WebApi.DeleteWarehouse(item.Id);
    ReferencesEndpoints.DeleteWarehouse(item.ProductionSite.Id, item.Id);
  }
}
