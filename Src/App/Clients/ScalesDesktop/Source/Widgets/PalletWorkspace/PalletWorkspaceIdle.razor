@using Blazor.Heroicons.Outline
@using ScalesDesktop.Source.Shared.Services
@using ScalesDesktop.Source.Widgets.FunctionalityDescription
@implements IDisposable

<div class="h-full pt-6 pb-8 bg-neutral-50 px-5 space-y-5 flex flex-col w-full overflow-hidden">
  <div class="size-full flex justify-around items-center overflow-hidden">
    <FunctionalityDescription />
  </div>
  <div class="shrink-0 w-full flex gap-8 pt-4 px-6 border-t">
    <div class="w-1/2 space-y-2">
      <FieldLabel>@WsDataLocalizer["ColUser"]</FieldLabel>
      <div class="flex items-center gap-2">
        <InputTextField
          Value="@PalletContext.PalletMan.Fio.DisplayShort"
          ReadOnly
        />
        <Button
          Variant="ButtonVariant.Outline"
          Size="ButtonSize.Icon"
          OnClick="@PalletContext.ResetPalletMan"
          class="shrink-0"
        >
          <ArrowLeftOnRectangleIcon class="size-4" />
        </Button>
      </div>
    </div>
    <div class="w-1/2 space-y-2">
      <FieldLabel>@WsDataLocalizer["ColWarehouse"]</FieldLabel>
      <InputTextField
        Value="@LineContext.Line.Warehouse.Name"
        ReadOnly
      />
    </div>
  </div>
</div>

@code {
  # region Injects

  [Inject] private IStringLocalizer<WsDataResources> WsDataLocalizer { get; set; } = default!;
  [Inject] private PalletContext PalletContext { get; set; } = default!;
  [Inject] private LineContext LineContext { get; set; } = default!;

  # endregion

  protected override void OnInitialized()
  {
    PalletContext.OnStateChanged += StateHasChanged;
    LineContext.OnLineChanged += StateHasChanged;
  }

  public void Dispose()
  {
    PalletContext.OnStateChanged -= StateHasChanged;
    LineContext.OnLineChanged -= StateHasChanged;
  }
}