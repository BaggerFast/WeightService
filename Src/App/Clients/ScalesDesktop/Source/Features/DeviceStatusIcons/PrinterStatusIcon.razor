@using Blazor.Heroicons.Outline
@using ScalesDesktop.Source.Shared.Services
@using TscZebra.Plugin.Abstractions.Enums

@implements IDisposable

<Button
  Size="ButtonSize.Icon"
  Variant="ButtonVariant.Outline"
  Class="relative !size-10"
>
  <div class="@Css.Class("size-3 rounded-full shadow-sm overflow-hidden absolute -top-1 -right-1", GetIndicatorStyle)"></div>
  <PrinterIcon class="@Css.Class("size-6", GetIconStyle)"/>
</Button>

@code {
  [Inject] private PrinterService PrinterService { get; set; } = default!;

  protected override void OnInitialized() => PrinterService.OnStatusChanged += StateHasChanged;

  private string GetIconStyle => PrinterService.Status switch
  {
    PrinterStatuses.IsDisconnected => "text-red-500",
    PrinterStatuses.Busy or PrinterStatuses.Ready => "text-green-500",
    _ => "text-amber-500"
  };

  private string GetIndicatorStyle => PrinterService.Status switch
  {
    PrinterStatuses.IsDisconnected => "bg-red-500 animate-ping",
    PrinterStatuses.Busy or PrinterStatuses.Ready => "bg-green-500",
    _ => "bg-amber-500 animate-ping"
  };

  public void Dispose() => PrinterService.OnStatusChanged -= StateHasChanged;
}