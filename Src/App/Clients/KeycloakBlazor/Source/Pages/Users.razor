@using KeycloakBlazor.Source.Api.Keycloak
@using KeycloakBlazor.Source.Utils
@using KeycloakBlazor.Source.Utils.Auth
@using Microsoft.AspNetCore.Authorization
@using Microsoft.FluentUI.AspNetCore.Components
@using Ws.Components.Source.Utils
@using Blazor.Heroicons.Outline

@attribute [Authorize(Roles=$"{RoleEnum.Admin}")]
@attribute [Route($"{RouteUtils.Users}")]

<h2 class="py-5">You have the role: @RoleEnum.Admin</h2>

<div class="rounded-md border w-full h-fit flex bg-background shadow-sm overflow-y-auto overflow-x-hidden">
  <FluentDataGrid
    TGridItem="User"
    GridTemplateColumns="1fr 1fr 6rem"
    Items="@UserData"
    RowClass="@(_ => "border-b hover:bg-secondary/[.5] hover:cursor-pointer")"
    Class="@Css.Class("w-full [&>.header]:border-b [&_fluent-data-grid-cell]:!text-primary [&_fluent-data-grid-cell]:!py-2 md:[&_fluent-data-grid-cell]:!py-3",
             "[&_.col-sort-button]:!text-primary [&_.col-options-button]:pl-1 [&_.col-sort-button]:pl-1")"
  >
    <PropertyColumn
      Property="@(p => p.Id)"
      Align="Align.Center"
      Title="â„–"
    />
    <PropertyColumn
      Property="@(p => p.Username)"
      Title="Username"
      Sortable="true"
    />
    <TemplateColumn Align="Align.Center">
      <Button
        Size="ButtonSize.Icon"
        Variant="ButtonVariant.Outline"
        OnClick="@(() => LogoutUser(context.Id))"
      >
        <ArrowLeftOnRectangleIcon class="size-5" />
      </Button>
    </TemplateColumn>
  </FluentDataGrid>
</div>

@code {
  [Inject] private IKeycloakApi KeycloakApi { get; set; } = default!;
  private IQueryable<User> UserData { get; set; } = new List<User>().AsQueryable();

  protected override async Task OnInitializedAsync() => await GetUserData();

  private async Task GetUserData()
  {
    try
    {
      IEnumerable<User> data = await KeycloakApi.GetAllUsers();
      UserData = data.AsQueryable();
    }
    catch
    {
      // pass
    }
  }

  private async Task LogoutUser(Guid userId)
  {
    try
    {
      await KeycloakApi.Logout(userId);
    }
    catch
    {
      // pass
    }
  }
}