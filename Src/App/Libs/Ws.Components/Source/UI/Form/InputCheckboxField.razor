<FluentCheckbox
  AdditionalAttributes="AdditionalAttributes"
  @bind-Value="Value"
  @bind-Value:after="OnValueChanged"
  Class="@Class"
  Disabled="Disabled"
  ReadOnly="ReadOnly"
/>

@code {
  [Parameter] public bool Value { get; set; }
  [Parameter] public EventCallback<bool> ValueChanged { get; set; }
  [Parameter] public string Class { get; set; } = string.Empty;
  [Parameter] public bool ReadOnly { get; set; }
  [Parameter] public bool Disabled { get; set; }
  [Parameter(CaptureUnmatchedValues = true)] public Dictionary<string, object> AdditionalAttributes { get; set; } = new();

  private async Task OnValueChanged() => await ValueChanged.InvokeAsync(Value);
}