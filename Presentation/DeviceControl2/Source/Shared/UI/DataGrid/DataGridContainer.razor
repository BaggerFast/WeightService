@using Blazorise.DataGrid
@using Blazor.Heroicons.Outline
@using System.Drawing
@typeparam TItem

<div class="size-full [&>form>table]:w-full [&>div>div>ul]:flex [&>div>div>ul]:justify-center [&>div>div>ul]:gap-1 [&>div>div>ul]:py-2 [&>div>div>ul]:border-t">
  <DataGrid
    TItem="TItem"
    Data="Items"

    RowDoubleClicked="@(obj => HandleRowDoubleClick(obj.Item))"
    SelectedRow="SelectedItem"
    RowContextMenu="OnRowContextMenu"
    RowContextMenuPreventDefault

    HeaderRowStyling="@(new DataGridRowStyling{ Class="h-12 text-left cursor-pointer items-center px-4 border-b [&_th]:overflow-hidden [&_th]:px-4 [&_th]:text-sm [&_th_div]:flex [&_th_div]:gap-1.5 [&_i]:pt-1" })"
    CellStyling="@((_, _, style) => style.Class = "px-4 py-3 text-sm truncate")"
    RowStyling="@((_, style) => style.Class = "border-y transition-colors font-light text-muted-foreground hover:bg-secondary/[.5] hover:cursor-pointer")"
    SelectedRowStyling="@((_, style) => style.Class = "bg-secondary/[.8] text-sm text-primary font-normal border-y [&_td]:px-4 [&_td]:py-3 [&_td]:overflow-hidden hover:cursor-pointer")"
    Class="table-fixed [&_tbody>tr:last-child]:border-b-0 [&_tbody>tr:first-child]:border-t-0 [&_thead>tr:last-child]:h-16 [&_thead>tr:last-child]:border-b [&_thead>tr:last-child_th]:px-4 [&_thead>tr:last-child_th>input]:h-10 [&_thead>tr:last-child_th>input]:w-full [&_thead>tr:last-child_th>input]:overflow-hidden [&_thead>tr:last-child_th>input]:text-sm [&_thead>tr:last-child_th>input]:bg-secondary/[.2] [&_thead>tr:last-child_th>input]:border [&_thead>tr:last-child_th>input]:rounded-md [&_thead>tr:last-child_th>input]:px-3 [&_thead>tr:last-child_th>input]:font-light [&_thead>tr:last-child_th>input:focus]:outline-none [&_thead>tr:last-child_th>input:focus]:ring-0 [&_tbody>tr>td[colspan='1000']]:h-12 [&_tbody>tr>td[colspan='1000']]:px-4 [&_tbody>tr>td[colspan='1000']]:space-x-3 [&_tbody>tr:not(:last-child)>td[colspan='1000']]:border-b"

    PagerPosition="DataGridPagerPosition.Bottom"
    PagerOptions="@(new() { PaginationPosition = PagerElementPosition.Center })"
    PageSize="@(IsGroupable ? 1000 : ItemsPerPage)"
    ShowPager="@((!IsGroupable && Items.Count() > ItemsPerPage) || IsForcePagination)"

    Groupable="@IsGroupable"
    Filterable="@IsFilterable"
    SortMode="DataGridSortMode.Single"
  >
    <DataGridColumns>
      @ColumnsContent
    </DataGridColumns>
    <PageButtonTemplate>
      <Button
        Variant="ButtonVariant.Outline"
        Size="ButtonSize.Icon"
      >
        <span class="text-muted-foreground">@context.PageNumber</span>
      </Button>
    </PageButtonTemplate>
    <NextPageButtonTemplate>
      <Button
        Variant="ButtonVariant.Outline"
        Size="ButtonSize.Icon"
      >
        <ChevronRightIcon class="size-5 text-muted-foreground" />
        <span class="sr-only">Next page</span>
      </Button>
    </NextPageButtonTemplate>
    <PreviousPageButtonTemplate>
      <Button
        Variant="ButtonVariant.Outline"
        Size="ButtonSize.Icon"
      >
        <ChevronLeftIcon class="size-5 text-muted-foreground" />
        <span class="sr-only">Previous page</span>
      </Button>
    </PreviousPageButtonTemplate>
    <LastPageButtonTemplate>
      <Button
        Variant="ButtonVariant.Outline"
        Size="ButtonSize.Icon"
      >
        <ChevronDoubleRightIcon class="size-5 text-muted-foreground" />
        <span class="sr-only">Last page</span>
      </Button>
    </LastPageButtonTemplate>
    <FirstPageButtonTemplate>
      <Button
        Variant="ButtonVariant.Outline"
        Size="ButtonSize.Icon"
      >
        <ChevronDoubleLeftIcon class="size-5 text-muted-foreground" />
        <span class="sr-only">First page</span>
      </Button>
    </FirstPageButtonTemplate>
    <TotalItemsTemplate>
      <div class="hidden"></div>
    </TotalItemsTemplate>
    <TotalItemsShortTemplate>
      <div class="hidden"></div>
    </TotalItemsShortTemplate>
    <PageSelectorTemplate>
      <div class="hidden"></div>
    </PageSelectorTemplate>
    <PageSizesTemplate>
      <div class="hidden"></div>
    </PageSizesTemplate>
  </DataGrid>
</div>


<DataGridContextMenu
  @ref="ContextMenuRef"
  ContextMenuPos="ContextMenuPos"
  @bind-IsContextMenuOpen="IsContextMenuOpen"
>
  @if (ContextMenuContent != null)
  {
    @ContextMenuContent(new(ContextMenuItem, EventCallback.Factory.Create(this, CloseContextMenu)))
  }
</DataGridContextMenu>
