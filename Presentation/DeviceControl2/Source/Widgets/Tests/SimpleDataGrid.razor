@using Ws.Domain.Services.Features.Plu
@using Ws.Domain.Models.Entities.Ref1c

@inject IPluService PluService

<FluentUIDataGrid TGridItem="PluEntity" Items="FilteredData" GridTemplate="1fr 1fr 4fr">
  <PropertyColumn
    Property="@(p => p.Number)"
    Title="Номер"
    Sortable="true"
  >
    <ColumnOptions>
      <FluentNumberField
        @bind-Value="Number"
        Min="0"
        Class="custom-input"
        Placeholder="Введите номер..."
      />
    </ColumnOptions>
  </PropertyColumn>
  <TemplateColumn Title="Тип">
    <span>@(context.IsCheckWeight ? "Весовая": "Штучная")</span>
  </TemplateColumn>
  <PropertyColumn
    Property="@(p => p.Name)"
    Title="Имя"
    Sortable="true"
  />
</FluentUIDataGrid>

@code {
  private short? Number { get; set; }
  private string Name { get; set; } = string.Empty;
  private IQueryable<PluEntity>? Data { get; set; } = new List<PluEntity>().AsQueryable();
  private IQueryable<PluEntity>? FilteredData
  {
    get
    {
      IQueryable<PluEntity>? tempData = Data;
      if (Number != null)
        tempData = tempData?.Where(x => x.Number.ToString().Contains(Number.ToString()!));

      if (!string.IsNullOrEmpty(Name))
        tempData = tempData?.Where(x => x.Name.Contains(Name));
      return tempData;
    }
  }

  protected override async Task OnInitializedAsync()
  {
    await Task.Run(() =>
    {
      Data = PluService.GetAll().AsQueryable();
    });
  }
}