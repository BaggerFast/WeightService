@using Blazorise.DataGrid
@using Ws.Domain.Models.Entities.Ref1c
@using Ws.Domain.Services.Features.Plu

@rendermode InteractiveServer

@inject IPluService PluService

<span>Текущая запись: @CurrentItemName</span>
<div class="w-full max-h-full bg-background rounded-md overflow-hidden border [&>form>table]:w-full [&>div>div>ul]:flex [&>div>div>ul]:justify-center [&>div>div>ul]:gap-1 [&>div>div>ul]:py-2 [&>div>div>ul]:border-t">
  <DataGridContainer
    TItem="PluEntity"
    Items="GridData"
  >
    <ColumnsContent>
      <DataGridColumn
        Caption="Number"
        Field="@nameof(PluEntity.Number)"
        FilterMethod="DataGridColumnFilterMethod.StartsWith"
        Width="20%"
      />
      <DataGridColumn
        Caption="Name"
        Field="@nameof(PluEntity.Name)"
        FilterMethod="DataGridColumnFilterMethod.Contains"
        Width="60%"
      />
      <DataGridColumn
        Caption="Type"
        Field="@nameof(PluEntity.IsCheckWeight)"
        Filterable="false"
        Width="20%"
      />
    </ColumnsContent>
    <ContextMenuContent>
      <DropdownItem OnClick="@(() => SetCurrentItem(context.Item, context.CloseContextMenu))">
        Delete item
      </DropdownItem>
    </ContextMenuContent>
  </DataGridContainer>
</div>

@code {
  private IEnumerable<PluEntity> GridData { get; set; } = [];
  private string CurrentItemName { get; set; } = string.Empty;

  private async Task SetCurrentItem(PluEntity? item, EventCallback onComplete)
  {
    if (item == null) return;
    CurrentItemName = item.DisplayName;
    await onComplete.InvokeAsync();
  }

  protected override void OnInitialized()
  {
    GridData = PluService.GetAll();
  }
}
