@using ScalesDesktop.Source.Shared.UI
@using ScalesDesktop.Source.Widgets
@using Ws.Shared.Enums
@using Blazor.Heroicons.Outline
@using ScalesDesktop.Source.Shared.UI.Form
@using ScalesDesktop.Source.Shared.UI.Dialog
@using ScalesDesktop.Source.Shared.UI.Tabs

<div class="w-full h-full overflow-hidden">
  @if (PalletContext.CurrentPallet.IsNew)
  {
    <div class="h-full pt-6 pb-8 bg-neutral-50 px-5 space-y-5 flex flex-col w-full overflow-hidden">
      <div class="w-full h-full flex justify-around items-center overflow-hidden">
        <FuncCard />
      </div>
      <div class="shrink-0 w-full flex gap-8 pt-4 px-6 border-t">
        <div class="w-1/2 space-y-2">
          <ScalesDesktop.Source.Shared.UI.Label>@WsDataLocalizer["ColUser"]</ScalesDesktop.Source.Shared.UI.Label>
          <div class="flex items-center gap-2">
            <VsInputText
              Value="@PalletContext.PalletMan.FioShort"
              class="!opacity-100"
              disabled
            />
            <ScalesDesktop.Source.Shared.UI.Button
              Variant="ButtonVariant.Outline"
              Size="ButtonSize.Icon"
              OnClick="@PalletContext.ResetPalletMan"
              class="shrink-0 !h-10 !w-10"
            >
              <ArrowLeftOnRectangleIcon class="h-4 w-4" />
            </ScalesDesktop.Source.Shared.UI.Button>
          </div>
        </div>
        <div class="w-1/2 space-y-2">
          <ScalesDesktop.Source.Shared.UI.Label>@WsDataLocalizer["ColWarehouse"]</ScalesDesktop.Source.Shared.UI.Label>
          <VsInputText
            Value="@LineContext.Line.Warehouse.Name"
            class="!opacity-100"
            disabled
          />
        </div>
      </div>
    </div>
  }
  else
  {
    <div class="w-full h-full overflow-hidden flex flex-col">
      <div class="h-14 shrink-0 w-full grid grid-cols-4 border-b px-4">
        <div class="flex h-full items-center">
          <Button
            Variant="ButtonVariant.Outline"
            OnClick="@CloseCurrentPallet"
          >
            <ArrowLeftIcon class="size-4 mr-2"/>
            Back
          </Button>
        </div>
        <div class="h-full flex items-center justify-center w-full col-span-2 grow overflow-hidden">
          <ul class="w-full h-full flex items-center gap-2 justify-center">
            @foreach (EnumTypeModel<string> item in TabsButtonList)
            {
              <li>
                <Button
                  Variant="@(CurrentTabId == item.Value ? ButtonVariant.Secondary : ButtonVariant.Outline)"
                  OnClick="@(() => CurrentTabId = item.Value)"
                  Disabled="@(CurrentTabId == item.Value)"
                  Class="disabled:!opacity-100"
                >
                  @item.Name
                </Button>
              </li>
            }
          </ul>
        </div>
      </div>
      <div class="w-full h-full grow overflow-hidden flex flex-col bg-secondary/[.3]">
        <Tabs @bind-ActiveTabId="CurrentTabId">
          <Tab Id="overview">
            <PalletOverview />
          </Tab>
          <Tab Id="labels">
            <LabelsGrid />
          </Tab>
        </Tabs>
      </div>
    </div>
  }
</div>